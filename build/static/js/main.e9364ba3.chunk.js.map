{"version":3,"sources":["ava.jpg","reportWebVitals.js","index.js","Components/Content/Components/LeftSideBar/Action.js","Components/Content/Components/LeftSideBar/Messages/Message.js","Components/Content/Components/LeftSideBar/Messages/ListMessages.js","Components/Content/Components/LeftSideBar/SearchMessage.js","Components/Content/Components/LeftSideBar/Contact/Contact.js","Components/Content/Components/LeftSideBar/Contact/ListContact.js","Components/Content/Components/LeftSideBar/Group/Group.js","Components/Content/Components/LeftSideBar/Group/ListGroup.js","Components/Content/Components/LeftSideBar/CreateNew/NewGroupChat/Contact.js","Components/Content/Components/LeftSideBar/CreateNew/NewChat.js","camera.jpg","Components/Content/Components/LeftSideBar/CreateNew/NewGroupChat.js","Components/Content/Components/LeftSideBar/CreateNew/NewContact.js","Components/Content/Components/LeftSideBar.js","Components/Content/Components/RightSideBar/addNewMember.js","Components/Content/Components/RightSideBar.js","Components/Content/Components/Conversation/MessageSend.js","Components/Content/Components/Conversation/MessageReceive.js","Components/Content/Components/ConvNonGroup.js","Components/Content/Components/ConvGroup.js","Components/Content/Content.js","Components/Footer/Footer.js","Components/Header/Components/Notification.js","Components/Header/Header.js","Home/App.js","Register/Register.js","Login/Login.js","Components/Header/Components/Account.js","Components/Header/Components/Account/Feedback.js","Components/Header/Components/Account/UpdateProfile.js","Components/Header/Components/Account/ChangePassword.js","Components/Header/Components/Account/Logout.js","service/UserService.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","Login","document","getElementById","Action","props","onClick","list","onShowList","state","className","aria-hidden","Component","Message","onShowInfo","listMessages","Username","loadDefaultImage","e","target","src","tempAvatar","this","username","Avatar","data","onError","alt","Firstname","ID_Sender","ListMessages","showAllMess","map","mes","index","SearchMessage","onSearch","txtSearch","current","value","onEnterPress","key","preventDefault","createRef","type","placeholder","aria-label","ref","onKeyPress","Contact","listContact","Lastname","ListContact","showAllContact","contact","Group","onShowInfoGroup","listGroup","ID_Room","NameRoom","ListGroup","showAllGroup","group","addMember","newGrChat","setState","currentColor","openChatRoom","removeMember","style","backgroundColor","data-dismiss","dataDismiss","onDoubleClick","NewChat","event","name","close","keyword","notification","filter","toLowerCase","indexOf","showResult","id","tabIndex","data-backdrop","role","aria-labelledby","defaultValue","onChange","NewGroupChat","resizeFile","file","Promise","resolve","Resizer","imageFileResizer","uri","onChangeFile","files","res","r","slice","avaGr","URL","createObjectURL","listMemberGr","push","createChatRoom","a","generateID","inputFile","id_room","addParticipants","result","disabled","socket","io","emit","user","infoUser","createNewGr","array","Set","Array","from","length","onLoad","React","Math","floor","random","toString","substring","randomID","backgroundImage","display","NewContact","searchUser","inputSearch","resultSearch","string","notificationSearch","catch","err","console","log","currentForm","insertFriend","sendRequest","dateFormat","Date","statusFr","checkStatusFr","loadHeader","onPrevious","pattern","Phone","Gender","DateOfBirth","LeftSideBar","DisplayList","modalNewAction","getListContact","getListMessages","getListGroup","findInfo","showInfo","forEach","indexGr","infoGr","infoGroup","searchData","setCurrentForm","nextProps","data-toggle","data-target","addNewMember","members","element","alert","RightSideBar","_isMounted","getInfoRoom","getListMembers","isFriend","isFr","tempGrAva","image","updateRoom","results","memberGroup","info","TimeOnline","TimeOffline","Email","Address","City","MessageSend","width","message","time","MessageReceive","ConvNonGroup","focusTxtMess","txtMessage","focus","getChat","getMessages","chats","mess","TimeSend","messages","onSendMessage","text","addMessage","closeConvTab","addEmoji","emoji","native","onUnfriend","idroom","friend","onAddfriend","idroom_temp","_onChange","onChangeMessage","on","response","newMessage","disconnect","prevProps","messagesEnd","scrollIntoView","block","behavior","m","listMessage","href","Time_Online","Time_Offline","aria-expanded","el","float","clear","onSelect","htmlFor","accept","rows","autoFocus","onKeyDown","ConvGroup","getMembers","getInfoMemGroup","mems","mem","findUsername","member","i","leaveGroup","Content","changeOnReload","onReload","reloadHeader","idroomTemp","Footer","Notification","getNotifications","notifications","isOpened","onAccept","sender","check","acceptFriendRequest","onRead","readNotification","listNotis","noti","IsFriend","height","Header","reload","Account","userFirstname","App","Register","onRegister","checkInput","checkRegister","pass","confirmPass","onHandleChange","names","values","phone","avatar","ava","onSubmit","required","div","color","focusUser","userInput","focusPass","passInput","onLogIn","login","Password","incorrectLogin","localStorage","setItem","JSON","stringify","onFocus","getItem","parse","marginTop","newAvatar","undefined","Buffer","Feedback","defaultChecked","UpdateProfile","updateUserProfile","data-error","data-success","checked","ChangePassword","changePass","oldpass","newpass","confpass","Logout","onLogOut","logout","removeItem","componentWillUnmount","fetch","method","headers","body","json","password","timeOnline","idRoom","user1","user2","receiver"],"mappings":"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","file":"static/js/main.e9364ba3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/ava.0262b249.jpg\";","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css'; \nimport 'bootstrap-css-only/css/bootstrap.min.css'; \nimport 'mdbreact/dist/css/mdb.css';\n// import App from './Home/App';\nimport reportWebVitals from './reportWebVitals';\nimport Login from './Login/Login.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Login />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React, { Component } from 'react'\r\n\r\nclass Action extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            list: 'ListMessages'\r\n        }\r\n    }\r\n    onClick = (list) => {\r\n        this.props.onShowList(list);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"row container side-button-list no-gutters\">\r\n                <div className=\"col-xs-4 col-sm-4 col-md-4 col-lg-4\">\r\n                    <button \r\n                        className=\"side-button btn blue-gradient\"\r\n                        onClick={() => this.onClick('ListMessages')}\r\n                    >\r\n                        <span className=\"fas fa-bell side-button-icon\" aria-hidden=\"true\"></span>Chats</button>\r\n                </div>\r\n                <div className=\"col-xs-4 col-sm-4 col-md-4 col-lg-4\">\r\n                    <button \r\n                    className=\"side-button btn\"\r\n                    onClick={() => this.onClick('ListGroup')}\r\n                    >\r\n                        <span className=\"fas fa-user-friends side-button-icon\" aria-hidden=\"true\"></span>GroupChat</button>\r\n                </div>\r\n                <div className=\"col-xs-4 col-sm-4 col-md-4 col-lg-4\">\r\n                    <button \r\n                    className=\"side-button btn blue-gradient\" \r\n                    onClick={() => this.onClick('ListContact')}\r\n                    >\r\n                        <span className=\"fas fa-address-book side-button-icon\"aria-hidden=\"true\"></span>Contacts</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Action\r\n","import React, { Component } from 'react'\r\nimport tempAvatar from '../../../../../ava.jpg'\r\nexport class Message extends Component {\r\n    onShowInfo = () => {\r\n        this.props.onShowInfo(this.props.listMessages.Username)\r\n    }\r\n    loadDefaultImage = (e) => {\r\n        e.target.src = tempAvatar;\r\n    }\r\n    render() {\r\n        var { listMessages, username } = this.props;\r\n        return (\r\n            <div>\r\n                <div className=\"chat-message\" onClick={this.onShowInfo}>\r\n                    <img\r\n                        src={\"data:image/*;base64,\" + listMessages.Avatar.data}\r\n                        className=\"img-responsive avatar\"\r\n                        onError={this.loadDefaultImage}\r\n                        alt=\"img\" />\r\n                    <div>\r\n                        <span className=\"name-receiver\">{listMessages.Firstname}</span>\r\n                        <span className=\"side-message\">\r\n                            {username === listMessages.ID_Sender ? \"You: \" : `${listMessages.Firstname}: `}{listMessages.Message}\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Message\r\n","import React, { Component } from 'react'\r\nimport Message from './Message';\r\n\r\nexport class ListMessages extends Component {\r\n    render() {\r\n        var { listMessages } = this.props;\r\n        var showAllMess = listMessages.map((mes, index) => {\r\n            return (<Message\r\n                key={mes.Username}\r\n                index={index}\r\n                listMessages={listMessages[index]}\r\n                onShowInfo={this.props.onShowInfo}\r\n                username={this.props.username}\r\n            />);\r\n        })\r\n        return (\r\n            <div>\r\n                {showAllMess}\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default ListMessages\r\n","import React, { Component, createRef } from 'react'\r\n\r\nexport class SearchMessage extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.txtSearch = createRef();\r\n    }\r\n\r\n    onSearch = () => {\r\n        this.props.onSearch(this.txtSearch.current.value);\r\n    }\r\n\r\n    onEnterPress = (e) => {\r\n        if (e.key === 'Enter') {\r\n            e.preventDefault();\r\n            this.onSearch();\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <span className=\"search-area side-search\">\r\n                    <form className=\"form-inline d-flex justify-content-center md-form form-sm mt-0\">\r\n                        <i className=\"fas fa-search mb-1\" aria-hidden=\"true\"\r\n                            onClick={this.onSearch}\r\n                        ></i>\r\n                        <input className=\"txtSearchSideBar form-control-sm shadow-none border-bottom-0 ml-3 w-75 mb-0\"\r\n                            type=\"text\"\r\n                            placeholder=\"Search\"\r\n                            aria-label=\"Search\" \r\n                            ref = {this.txtSearch}\r\n                            onKeyPress={this.onEnterPress}\r\n                        />\r\n                    </form>\r\n                </span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchMessage\r\n","import React, { Component } from 'react'\r\nimport tempAvatar from '../../../../../ava.jpg'\r\n\r\nexport class Contact extends Component {\r\n    onShowInfo = () => {\r\n        this.props.onShowInfo(this.props.listContact.Username)\r\n    }\r\n    loadDefaultImage = (e) => {\r\n        e.target.src = tempAvatar;\r\n    }\r\n    render() {\r\n        var { listContact } = this.props;\r\n        return (\r\n            <div className=\"contact\"\r\n                \r\n                onClick={this.onShowInfo}\r\n                >\r\n                <img\r\n                    src={\"data:image/*;base64,\" + listContact.Avatar.data}\r\n                    className=\"img-responsive avatar\"\r\n                    onError={this.loadDefaultImage}\r\n                    alt=\"img\" />\r\n                <div>\r\n                    <span className=\"name-receiver\">{listContact.Firstname === '' ? listContact.Username : listContact.Firstname+\" \"+listContact.Lastname}</span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Contact\r\n","import React, { Component } from 'react'\r\nimport Contact from './Contact'\r\nexport class ListContact extends Component {\r\n\r\n    render() {\r\n        var { listContact } = this.props;\r\n        var showAllContact = listContact.map((contact, index) => {\r\n            return (<Contact\r\n                key={contact.Username}\r\n                index={index}\r\n                onShowInfo={this.props.onShowInfo}\r\n                listContact={listContact[index]}\r\n            />);\r\n        })\r\n        return (\r\n            <div >\r\n                {showAllContact }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListContact\r\n","import React, { Component } from 'react'\r\nimport tempAvatar from '../../../../../ava.jpg'\r\n\r\nexport class Group extends Component {\r\n    onShowInfoGroup=()=>\r\n    {\r\n        this.props.onShowInfoGroup(this.props.listGroup.ID_Room)\r\n    }\r\n    loadDefaultImage = (e) => {\r\n        e.target.src = tempAvatar;\r\n    }\r\n    render() {\r\n        var {listGroup, username}=this.props;\r\n        // console.log(listGroup);\r\n        return (\r\n            <div>\r\n                <div className=\"group\" onClick={this.onShowInfoGroup}>\r\n                    <img \r\n                        src={\"data:image/*;base64,\"+listGroup.Avatar.data}\r\n                        className=\"img-responsive avatar\" \r\n                        onError={this.loadDefaultImage}\r\n                        alt=\"img\" />\r\n                    <div>\r\n                        <span className=\"name-receiver\">{listGroup.NameRoom}</span>\r\n                        <span className=\"side-message\">\r\n                            {username === listGroup.ID_Sender ? \"You: \" : (listGroup.ID_Sender!==''?`${listGroup.Firstname}: `:'')}{listGroup.Message}\r\n                        </span>\r\n\r\n                    </div>\r\n                </div>                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Group\r\n","import React, { Component } from 'react'\r\nimport Group from './Group';\r\n\r\nexport class ListGroup extends Component {\r\n    render() {\r\n        var { listGroup } = this.props;\r\n        var showAllGroup = listGroup.map((group, index) => {\r\n            return (<Group\r\n                key={group.ID_Room}\r\n                index={index}\r\n                listGroup={listGroup[index]}\r\n                onShowInfoGroup={this.props.onShowInfoGroup}\r\n                username = {this.props.username}\r\n            />);\r\n        })\r\n        return (\r\n            <div>\r\n                {showAllGroup}\r\n            </div>                \r\n        );\r\n    }\r\n}\r\n\r\nexport default ListGroup\r\n","import React, { Component } from 'react'\r\nimport tempAvatar from '../../../../../../ava.jpg'\r\n\r\nexport class Contact extends Component {\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state={\r\n            currentColor:\"white\",\r\n        }\r\n    }\r\n    addMember=()=>\r\n    {\r\n        if(this.props.newGrChat)\r\n        {\r\n            this.props.addMember(this.props.contact.Username)\r\n            this.setState({\r\n                currentColor:\"#d0d6e2\"\r\n            })\r\n        }\r\n        else\r\n        {\r\n            this.props.openChatRoom(this.props.contact.Username);\r\n        }\r\n\r\n    }\r\n    removeMember=()=>\r\n    {\r\n        this.props.removeMember(this.props.contact.Username)\r\n        this.setState({\r\n            currentColor:\"white\"\r\n        })\r\n    }\r\n    loadDefaultImage = (e) => {\r\n        e.target.src = tempAvatar;\r\n    }\r\n    render() {\r\n        var {contact}=this.props;\r\n        var {newGrChat}=this.props;\r\n        if(newGrChat)\r\n        {\r\n            return (\r\n                <div className=\"contact create-new\"\r\n                    style={{backgroundColor: this.state.currentColor}}\r\n                    onClick={this.addMember}\r\n                    data-dismiss={this.state.dataDismiss}\r\n                    onDoubleClick={this.removeMember}>\r\n                    <img\r\n                        src={\"data:image/*;base64,\"+contact.Avatar.data}\r\n                        className=\"img-responsive avatar\"\r\n                        onError={this.loadDefaultImage}\r\n                        alt=\"img\" />\r\n                    <div>\r\n                        <span className=\"username-receiver\">{contact.Username}</span>\r\n                        <span className=\"fullname-receiver grey-text\">{contact.Firstname+\" \"+contact.Lastname}</span>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else\r\n        {\r\n            return (\r\n                <div className=\"contact create-new\"\r\n                    style={{backgroundColor: this.state.currentColor}}\r\n                    onClick={this.addMember}\r\n                    data-dismiss=\"modal\">\r\n                    <img\r\n                        src={\"data:image/*;base64,\"+contact.Avatar.data}\r\n                        className=\"img-responsive avatar\"\r\n                        onError={this.loadDefaultImage}\r\n                        alt=\"img\" />\r\n                    <div>\r\n                        <span className=\"username-receiver\">{contact.Username}</span>\r\n                        <span className=\"fullname-receiver grey-text\">{contact.Firstname+\" \"+contact.Lastname}</span>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default Contact\r\n","import React, { Component } from 'react'\r\nimport tempAvatar from '../../../../../ava.jpg'\r\nimport { } from '../../../../../service/UserService';\r\nimport './CreateNew.css'\r\nimport Contact from './NewGroupChat/Contact';\r\n\r\nexport default class NewChat extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            keyword: '',\r\n            listContact: this.props.listContact,\r\n            notification: '',\r\n        }\r\n    }\r\n\r\n    onSearch = (event) => {\r\n        var target = event.target;\r\n        var name = target.name;\r\n        var value = target.value;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    loadDefaultImage = (e) => {\r\n        e.target.src = tempAvatar;\r\n    }\r\n    close = () => {\r\n        this.setState({\r\n            keyword: '',\r\n\r\n        })\r\n    }\r\n    render() {\r\n        var { listContact } = this.state;\r\n        if (this.state.keyword) {\r\n            listContact = listContact.filter((list) => {\r\n                return list.Username.toLowerCase().indexOf(this.state.keyword) !== -1\r\n                    || list.Lastname.toLowerCase().indexOf(this.state.keyword) !== -1\r\n                    || list.Firstname.toLowerCase().indexOf(this.state.keyword) !== -1\r\n\r\n            })\r\n        }\r\n        var showResult = listContact.map((contact, index) => {\r\n            return <Contact\r\n                key={contact.Username}\r\n                index={index + 1}\r\n                contact={contact}\r\n                newGrChat={false}\r\n                openChatRoom={this.props.openChatRoom}\r\n            />\r\n        });\r\n        return (\r\n            <div>\r\n                <div className=\"modal fade\" id=\"ModalNewChat\" tabIndex=\"-1\" data-backdrop=\"static\" role=\"dialog\" aria-labelledby=\"myModalLabel\"\r\n                    aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog\" role=\"document\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header text-center\">\r\n                                <h4 className=\"modal-title w-100 font-weight-bold\">NewChat</h4>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"modal-body  \">\r\n                                <div className=\"md-form \">\r\n                                    <input\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        name=\"keyword\"\r\n                                        defaultValue={this.state.keyword}\r\n                                        onChange={this.onSearch}\r\n                                        placeholder=\"Search\"\r\n                                        aria-label=\"Search\" />\r\n                                </div>\r\n                                <span className=\"txt-side-bar ml-0\">PEOPLE</span>\r\n                                <div className=\"result-search ml-1 mb-3\">\r\n                                    {showResult}\r\n                                </div>\r\n                            </div>\r\n                            <span className=\"text-center\">{this.state.notification}</span>\r\n                            <div className=\"modal-footer d-flex justify-content-center\">\r\n                                <button\r\n                                    className=\"btn \"\r\n                                    id=\"btnClose\"\r\n                                    onClick={this.close}\r\n                                    data-dismiss=\"modal\"\r\n                                >Cancel</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/camera.ec8e0077.jpg\";","import React, { Component } from 'react'\r\nimport tempAvatar from '../../../../../camera.jpg'\r\nimport { addParticipants, createChatRoom } from '../../../../../service/UserService';\r\nimport './CreateNew.css'\r\nimport Contact from './NewGroupChat/Contact';\r\nimport Resizer from 'react-image-file-resizer'\r\nimport io from 'socket.io-client';\r\n\r\nexport default class NewGroupChat extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            file: '',\r\n            keyword: '',\r\n            listContact: this.props.listContact,\r\n            listMemberGr: [],\r\n            avaGr: '',\r\n            notification: '',\r\n            id_room: '',\r\n            disabled:''\r\n        }\r\n        this.socket=null;\r\n        this.inputFile = React.createRef();\r\n    }\r\n    componentDidMount() {\r\n        \r\n        var {listMemberGr} = this.state;\r\n        listMemberGr.push(this.props.infoUser.Username);\r\n        this.setState({listMemberGr: listMemberGr});\r\n    }\r\n    randomID() {\r\n        return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\r\n    }\r\n    generateID() {\r\n        return this.randomID() + this.randomID() + '-' + this.randomID();\r\n    }\r\n    resizeFile = (file) => new Promise(resolve => {\r\n        Resizer.imageFileResizer(file, 150, 150, 'JPEG', 100, 0,\r\n            uri => {\r\n                resolve(uri);\r\n            },\r\n            'base64'\r\n        );\r\n    })\r\n    onChangeFile = (e) => {\r\n        var target = e.target.files[0];\r\n        const image = this.resizeFile(target);\r\n        image.then(res => {\r\n            var r = res.slice(res.indexOf(',') + 1);\r\n            this.setState({\r\n                avaGr: r,\r\n                file: URL.createObjectURL(e.target.files[0])\r\n            })\r\n        });\r\n    }\r\n    onSearch = (event) => {\r\n        var target = event.target;\r\n        var name = target.name;\r\n        var value = target.value;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    addMember = (data) => {\r\n        this.state.listMemberGr.push(data);\r\n    }\r\n    removeMember = (data) => {\r\n        this.setState({\r\n            listMemberGr: this.state.listMemberGr.filter((list) => {\r\n                return list !== data\r\n            })\r\n        })\r\n    }\r\n    createChatRoom = async () => {\r\n        await createChatRoom(this.generateID(), this.inputFile.current.value, this.state.avaGr)\r\n            .then(res => {\r\n                this.setState({\r\n                    id_room: res.id_room\r\n                })\r\n            })\r\n    }\r\n    addParticipants = async () => {\r\n        await addParticipants(this.generateID(), this.state.id_room, this.state.listMemberGr)\r\n            .then(res => {\r\n                this.setState({\r\n                    notification: res.result,\r\n                    disabled: true\r\n                })\r\n                if(this.state.notification==='Create group successfully')\r\n                {\r\n                    this.socket = io('localhost:3070');\r\n                     this.socket.emit('creategroup',{id:this.state.id_room,user:this.props.infoUser.Username})\r\n                }\r\n            })\r\n    }\r\n    createNewGr = async(e) => {\r\n        //remove duplicate data in listMemberGr\r\n        const array = new Set(this.state.listMemberGr)\r\n        this.setState({\r\n            listMemberGr: Array.from(new Set(array))\r\n        })\r\n        if (this.inputFile.current.value && this.state.listMemberGr.length >2) {\r\n            await this.createChatRoom();\r\n            if (this.state.id_room!==-1 && this.state.id_room) {\r\n                await this.addParticipants();\r\n            }\r\n        }\r\n        else {\r\n            if (!this.inputFile.current.value)\r\n                this.setState({\r\n                    notification: \"Group name can not be empty\"\r\n                })\r\n            if (this.state.listMemberGr.length <2)\r\n                this.setState({\r\n                    notification: \"Number of members must be more than 2\"\r\n                })\r\n        }\r\n    }\r\n    loadDefaultImage = (e) => {\r\n        e.target.src = tempAvatar;\r\n    }\r\n    close=(e)=>\r\n    {\r\n        this.setState({\r\n            file: '',\r\n            keyword: '',\r\n            listContact: this.props.listContact,\r\n            listMemberGr: [],\r\n            avaGr: '',\r\n            notification: '',\r\n            id_room: '',\r\n            disabled:''\r\n        })\r\n        this.props.onLoad();\r\n    }\r\n    render() {\r\n        var { listContact } = this.state;\r\n        if (this.state.keyword) {\r\n            listContact = listContact.filter((list) => {\r\n                return list.Username.toLowerCase().indexOf(this.state.keyword) !== -1\r\n                    || list.Lastname.toLowerCase().indexOf(this.state.keyword) !== -1\r\n                    || list.Firstname.toLowerCase().indexOf(this.state.keyword) !== -1\r\n\r\n            })\r\n        }\r\n        var showResult = listContact.map((contact, index) => {\r\n            return <Contact\r\n                key={contact.Username}\r\n                index={index + 1}\r\n                newGrChat={true}\r\n                contact={contact}\r\n                addMember={this.addMember}\r\n                removeMember={this.removeMember}\r\n            />\r\n        });\r\n        return (\r\n            <div>\r\n                <div className=\"modal fade\" id=\"ModalNewGroupChat\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\"\r\n                    aria-hidden=\"true\" data-backdrop=\"static\">\r\n                    <div className=\"modal-dialog cascading-modal modal-avatar\" role=\"document\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header mb-0 pb-0\">\r\n                                <div className=\"file-field text-center\">\r\n                                    <div className=\"d-flex justify-content-center mb-1\">\r\n                                        <label src={this.state.file}\r\n                                            alt=\"ava\"\r\n                                            onError={this.loadDefaultImage}\r\n                                            className=\"rounded-circle img-responsive modal-title avatar-pic-gr\"\r\n                                            style={this.state.file === '' ? { backgroundImage: \"url('\" + tempAvatar + \"')\" }\r\n                                             : { backgroundImage: \"url('\" + this.state.file + \"')\" }}\r\n                                        >\r\n                                            <input\r\n                                                type=\"file\"\r\n                                                style={{ display: \"none\" }}\r\n                                                onChange={this.onChangeFile}\r\n                                            />\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className=\"modal-body  \">\r\n                                <div className=\"md-form ml-0 mr-0 \">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        placeholder=\"Group name\"\r\n                                        id=\"txtEnterGroupName\"\r\n                                        name=\"grName\"\r\n                                        ref={this.inputFile}\r\n                                        className=\"enter-group-name form-control form-control-sm text-center ml-0\" />\r\n                                </div>\r\n                                <h5 className=\"text-center\">Add member of group</h5>\r\n                                <div className=\"md-form \">\r\n                                    <div className=\"md-form \">\r\n                                        <input\r\n                                            className=\"form-control\"\r\n                                            type=\"text\"\r\n                                            name=\"keyword\"\r\n                                            defaultValue={this.state.keyword}\r\n                                            onChange={this.onSearch}\r\n                                            placeholder=\"Search\"\r\n                                            aria-label=\"Search\" />\r\n                                    </div>\r\n                                    <div className=\"result-search ml-1 mb-3\">\r\n                                        {showResult}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <span className=\"text-center\">{this.state.notification}</span>\r\n\r\n                            <div className=\"modal-footer d-flex justify-content-center\">\r\n                                <button\r\n                                    className=\"btn blue-gradient\"\r\n                                    id=\"btnDone\"\r\n                                    disabled={this.state.disabled}\r\n                                    onClick={this.createNewGr}\r\n                                >Create</button>\r\n                                <button\r\n                                    className=\"btn \"\r\n                                    id=\"btnClose\"\r\n                                    onClick={this.close}\r\n                                    data-dismiss=\"modal\"\r\n                                >Cancel</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component, createRef } from 'react'\r\nimport tempAvatar from '../../../../../ava.jpg'\r\nimport dateFormat from 'dateformat';\r\nimport { checkStatusFr, searchUser, sendRequest } from '../../../../../service/UserService';\r\nimport './CreateNew.css'\r\nexport default class NewContact extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentForm: this.props.currentForm,\r\n            notificationSearch: '',\r\n            resultSearch:null,\r\n            statusFr:''\r\n        }\r\n        this.inputSearch = createRef();\r\n    }\r\n\r\n    onSearch = async (e) => {\r\n        e.preventDefault();\r\n        await searchUser(this.inputSearch.current.value)\r\n        .then(res=>\r\n            {\r\n                this.setState({\r\n                    resultSearch:res.string,\r\n                    notificationSearch:res.result\r\n                })\r\n            }).catch(err=>console.log(err));\r\n        if(this.state.notificationSearch==='Phone number is existing')\r\n        {\r\n            this.setState({\r\n                currentForm: 'formResult'\r\n            })\r\n\r\n        }\r\n\r\n    }\r\n    randomID() {\r\n        return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\r\n    }\r\n    generateID() {\r\n        return this.randomID() + this.randomID() + '-' + this.randomID();\r\n    }\r\n    insertFriend=async()=>\r\n    {\r\n        await sendRequest(this.generateID(),this.props.infoUser.Username,this.state.resultSearch.Username,dateFormat(new Date(), \"yyyy-mm-dd HH:MM:ss\"))\r\n        .then(res=>\r\n            this.setState({\r\n                statusFr:res.result\r\n            })\r\n            ).catch(err=>console.log(err));\r\n    }\r\n    sendRequest=async(e)=>\r\n    {\r\n        e.preventDefault();\r\n        await checkStatusFr(this.props.infoUser.Username,this.state.resultSearch.Username)\r\n        .then(res=>\r\n            {\r\n                if(res.result===\"Not friend\")\r\n                {\r\n                    this.props.loadHeader(this.state.resultSearch.Username);\r\n                    this.insertFriend();\r\n                }\r\n                else\r\n                    this.setState({\r\n                        statusFr:res.result\r\n                    })\r\n            }\r\n            ).catch(err=>console.log(err));\r\n    }\r\n    onPrevious = (e) => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            currentForm: 'formSearch',\r\n            notificationSearch:''\r\n        })\r\n    }\r\n    loadDefaultImage = (e) => {\r\n        e.target.src = tempAvatar;\r\n    }\r\n    componentDidMount() {\r\n        this.setState({\r\n            currentForm: 'formSearch',\r\n            notificationSearch:'',\r\n            statusFr:''\r\n        })\r\n    }\r\n    close=()=>\r\n    {\r\n        this.setState({\r\n            currentForm: 'formSearch',\r\n            notificationSearch:'',\r\n            statusFr:''\r\n        })\r\n    }\r\n    render() {\r\n        var current;\r\n        if (this.state.currentForm === 'formSearch') {\r\n            current = <div >\r\n                <div className=\"md-form \">\r\n                    <div className=\"md-form mt-0\">\r\n                        <input\r\n                            type=\"tel\"\r\n                            id=\"phoneSearch\"\r\n                            pattern=\"[0]{1}[0-9]{9}\"\r\n                            className=\"form-control text-center\"\r\n                            placeholder=\"Enter phone number\"\r\n                            aria-label=\"Search\"\r\n                            ref={this.inputSearch}\r\n                        />\r\n                    </div>\r\n                    <span className=\"notification-search d-flex justify-content-center\">\r\n                        {this.state.notificationSearch}\r\n                    </span>\r\n                </div>\r\n                <div className=\"modal-footer d-flex justify-content-center\">\r\n                    <button\r\n                        className=\"btn blue-gradient\"\r\n                        id=\"btnSearch\"\r\n                        onClick={this.onSearch}\r\n                    >Search</button>\r\n\r\n                    <button\r\n                        className=\"btn \"\r\n                        id=\"btnCancel\"\r\n                        data-dismiss=\"modal\"\r\n                        onClick={this.close}\r\n                    >Cancel</button>\r\n                </div>\r\n            </div>\r\n        }\r\n        else {\r\n            var {resultSearch}=this.state;\r\n            current = <div >\r\n                <div className=\"modal-header md-form result-search\">\r\n\r\n                    <img\r\n                        src={\"data:image/jpg;base64,\" + this.state.resultSearch.Avatar.data}\r\n                        alt=\"ava\"\r\n                        onError={this.loadDefaultImage}\r\n                        className=\"rounded-circle avatar-search-user\"\r\n                    />\r\n\r\n                </div>\r\n                <h5 className=\"mt-1 text-center\"><b>{resultSearch.Firstname===''?resultSearch.Username:(resultSearch.Firstname+\" \"+resultSearch.Lastname)}</b></h5>\r\n                <table className=\"md-form modal-body tbl-info-result-search\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>Phone:</td>\r\n                            <td >{resultSearch.Phone}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Gender:</td>\r\n                            <td >{resultSearch.Gender===0?'Male':'Female'}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Birthday:</td>\r\n                            <td >{resultSearch.DateOfBirth}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <div className=\"modal-footer d-flex justify-content-center notification-result-search\">\r\n                    {this.state.statusFr}\r\n                </div>\r\n                <div className=\"modal-footer d-flex justify-content-center\">\r\n                    <button\r\n                        className=\"btn\"\r\n                        id=\"btnPrevious\"\r\n                        onClick={this.onPrevious}\r\n                    >Previous</button>\r\n                    <button\r\n                        className=\"btn blue-gradient\"\r\n                        id=\"btnAdd\"\r\n                        onClick={this.sendRequest}\r\n                    >Send request</button>\r\n                    <button\r\n                        className=\"btn \"\r\n                        id=\"btnCancel\"\r\n                        data-dismiss=\"modal\"\r\n                        onClick={this.close}\r\n                    >Cancel</button>\r\n                </div>\r\n            </div>\r\n        }\r\n        return (\r\n            <div>\r\n                <div className=\"modal fade \" id=\"ModalNewContact\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\"\r\n                    aria-hidden=\"false\" data-backdrop=\"static\">\r\n                    <div className=\"modal-dialog \" role=\"document\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header text-center\">\r\n                                <h4 className=\"modal-title w-100 font-weight-bold\">Add New Contact</h4>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" onClick={this.close} aria-label=\"Close\">\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n                            <div >\r\n                                <form className=\"modal-body mx-3\">\r\n                                    {current}\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Action from './LeftSideBar/Action'\r\nimport ListMessages from './LeftSideBar/Messages/ListMessages'\r\nimport SearchMessage from './LeftSideBar/SearchMessage'\r\nimport ListContact from './LeftSideBar/Contact/ListContact'\r\nimport ListGroup from './LeftSideBar/Group/ListGroup'\r\nimport './LeftSideBar/LeftSideBar.css'\r\nimport { getListContact, getListGroup, getListMessages } from '../../../service/UserService'\r\nimport NewChat from './LeftSideBar/CreateNew/NewChat'\r\nimport NewGroupChat from './LeftSideBar/CreateNew/NewGroupChat'\r\nimport NewContact from './LeftSideBar/CreateNew/NewContact'\r\n\r\nclass LeftSideBar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            DisplayList: 'ListMessages',\r\n            modalNewAction: '#ModalNewChat',\r\n            // showInfoGroup: [],\r\n            showInfo: null,\r\n            listContact: [],\r\n            listMessages: [],\r\n            listGroup: [],\r\n            currentForm: 'formSearch'\r\n        }\r\n    }\r\n    onShowList = (list) => {\r\n        if (list === 'ListContact') {\r\n            this.setState({\r\n                DisplayList: 'ListContact',\r\n                modalNewAction: '#ModalNewContact'\r\n            });\r\n            this.getListContact('');\r\n        }\r\n        if (list === 'ListMessages') {\r\n            this.setState({\r\n                DisplayList: 'ListMessages',\r\n                modalNewAction: '#ModalNewChat'\r\n            })\r\n            this.getListMessages('');\r\n            // this.getListContact('');\r\n        }\r\n        if (list === 'ListGroup') {\r\n            this.setState({\r\n                DisplayList: 'ListGroup',\r\n                modalNewAction: '#ModalNewGroupChat'\r\n            })\r\n            this.getListGroup('');\r\n            // this.getListContact('');\r\n        }\r\n    }\r\n    onShowInfo = async (username) => {\r\n        var list;\r\n        if (this.state.DisplayList === 'ListMessages') {\r\n            list = this.state.listMessages;\r\n        } else {\r\n            list = this.state.listContact\r\n        };\r\n        var index = this.findInfo(username);\r\n        var showInfo = list[index];\r\n        await this.setState({\r\n            showInfo: showInfo\r\n        })\r\n        this.props.showInfo(this.state.showInfo);\r\n    }\r\n    findInfo = (username) => {\r\n        var result = -1;\r\n        var list;\r\n        if (this.state.DisplayList === 'ListMessages') {\r\n            list = this.state.listMessages;\r\n        } else {\r\n            list = this.state.listContact\r\n        };\r\n        list.forEach((list, index) => {\r\n            if (list.Username === username)\r\n                result = index;\r\n        })\r\n        return result;\r\n    }\r\n    onShowInfoGroup = async (ID_Room) => {\r\n        // await getInfoMemGroup(ID_Room)\r\n        //     .then(res =>\r\n        //         this.setState({\r\n        //             showInfoGroup: res\r\n        //         })).catch(err => console.log(err));\r\n        // this.props.showInfoMemGroup(this.state.showInfoGroup);\r\n\r\n        var { listGroup } = this.state;\r\n        var indexGr = -1;\r\n        listGroup.forEach((list, index) => {\r\n            if (list.ID_Room === ID_Room)\r\n                indexGr = index;\r\n        })\r\n        var infoGr = listGroup[indexGr];\r\n        this.props.infoGroup(infoGr);\r\n    }\r\n    getListContact = async (txtSearch) => {\r\n        await getListContact([this.props.username, txtSearch])\r\n            .then(res =>\r\n                this.setState({\r\n                    listContact: res\r\n                })\r\n            ).catch(err => console.log(err));\r\n    }\r\n    getListMessages = async (txtSearch) => {\r\n        await getListMessages([this.props.username, txtSearch])\r\n            .then(res =>\r\n                this.setState({\r\n                    listMessages: res\r\n                })\r\n            ).catch(err => console.log(err));\r\n    }\r\n    getListGroup = async (txtSearch) => {\r\n        await getListGroup([this.props.username, txtSearch])\r\n            .then(res =>\r\n                this.setState({\r\n                    listGroup: res\r\n                })).catch(err => console.log(err));\r\n    }\r\n    componentDidMount() {\r\n        this.getListMessages('');\r\n        this.getListContact('');\r\n        // this.getListGroup('');\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps) {\r\n            this.searchData('');\r\n        }\r\n    }\r\n    onSearch = (data) => {\r\n        this.searchData(data);\r\n    }\r\n    searchData = (txtSearch) => {\r\n        var {DisplayList} = this.state;\r\n        if (DisplayList === 'ListContact') {\r\n            this.getListContact(txtSearch);\r\n        }\r\n        if (DisplayList === 'ListMessages') {\r\n            this.getListMessages(txtSearch);\r\n        }\r\n        if (DisplayList === 'ListGroup') {\r\n            this.getListGroup(txtSearch);\r\n        }\r\n    }\r\n    setCurrentForm = () => {\r\n        this.setState({\r\n            currentForm: 'formSearch'\r\n        })\r\n    }\r\n    openChatRoom=async(username)=>\r\n    {\r\n        await this.setState({\r\n            DisplayList:'ListContact',\r\n        })\r\n        var list;\r\n        list = this.state.listContact\r\n        var index = this.findInfo(username);\r\n        var showInfo = list[index];\r\n        await this.setState({\r\n            showInfo: showInfo\r\n        })\r\n        this.props.showInfo(this.state.showInfo)\r\n    }\r\n    randomID() {\r\n        return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\r\n    }\r\n    generateID() {\r\n        return this.randomID() + this.randomID() + '-' + this.randomID();\r\n    }\r\n    loadHeader = (data) => {\r\n        this.props.loadHeader(data);\r\n    }\r\n    render() {\r\n        var { DisplayList, listGroup, listContact, listMessages } = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"side-bar\">\r\n                    <div className=\"row search-side-bar\">\r\n                        <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n                            <SearchMessage  onSearch={this.onSearch}/>\r\n                        </div>\r\n                    </div>\r\n                    <Action\r\n                        onShowList={this.onShowList}\r\n                    />\r\n                    <button\r\n                        className=\"row btn new-event\"\r\n                        data-toggle=\"modal\"\r\n                        onClick={this.setCurrentForm}\r\n                        data-target={this.state.modalNewAction}>\r\n                        <i className=\"fas fa-user-plus\"></i>\r\n                        {DisplayList === 'ListMessages' ? 'New chat' : (DisplayList === 'ListContact' ? 'New contact' : 'New group chat')}\r\n                    </button>\r\n                    <div className=\"side-bar-content\">\r\n                        <div className=\"list-side-bar-content heading\">\r\n                            <span className=\"txt-side-bar\">\r\n                                {DisplayList === 'ListMessages' ? 'MY MESSAGES' : (DisplayList === 'ListContact' ? 'MY CONTACT' : 'MY GROUP')}</span>\r\n                        </div>\r\n                        <div className=\"list-side-bar-content body \">\r\n                            {DisplayList === 'ListMessages' ?\r\n                                <ListMessages username={this.props.username} onShowInfo={this.onShowInfo} listMessages={listMessages} /> : (DisplayList === 'ListContact' ?\r\n                                    <ListContact onShowInfo={this.onShowInfo} listContact={listContact} /> :\r\n                                    <ListGroup username={this.props.username} onShowInfoGroup={this.onShowInfoGroup} listGroup={listGroup} />)}\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <NewChat\r\n                    key={this.generateID()}\r\n                    infoUser={this.props.infoUser}\r\n                    listContact={this.state.listContact} \r\n                    openChatRoom={this.openChatRoom}/>\r\n                <NewGroupChat\r\n                    key={this.generateID()}\r\n                    infoUser={this.props.infoUser}\r\n                    listContact={this.state.listContact}\r\n                    onLoad={this.props.onLoad}\r\n                />\r\n                <NewContact\r\n                    key={this.generateID()}\r\n                    currentForm={this.state.currentForm}\r\n                    infoUser={this.props.infoUser} \r\n                    loadHeader = {this.loadHeader}\r\n                />\r\n\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default LeftSideBar\r\n","import React, { Component } from 'react'\r\nimport tempAvatar from '../../../../ava.jpg'\r\nimport { addParticipants } from '../../../../service/UserService';\r\nimport io from 'socket.io-client';\r\n\r\nexport class addNewMember extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            keyword: '',\r\n            listContact: this.props.listContact,\r\n            notification: '',\r\n            members: this.props.members\r\n        }\r\n        this.socket=null;\r\n    }\r\n    onSearch = (event) => {\r\n        var target = event.target;\r\n        var name = target.name;\r\n        var value = target.value;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n    addMember=(data)=>\r\n    {\r\n        var result=-1;\r\n        var {members}=this.state;\r\n        members.forEach((element,index) => {\r\n            if(element.Username===data)\r\n            {\r\n                result=index;\r\n            }\r\n        });\r\n        if(result===-1)\r\n        {\r\n            this.addParticipants(data);\r\n        }\r\n        else\r\n        {\r\n            alert(\"This user already exists in group\")\r\n        }\r\n    }\r\n    addParticipants=async(data)=>\r\n    {\r\n        var list=[];\r\n        list.push(data)\r\n        await addParticipants(this.generateID(),this.props.id,list)\r\n        .then(res=>\r\n            {\r\n                this.socket = io('localhost:3070');\r\n                this.socket.emit('updateroom', { id: this.props.id, user: this.props.username })\r\n            })\r\n    }\r\n    randomID() {\r\n        return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\r\n    }\r\n    generateID() {\r\n        return this.randomID() + this.randomID() + '-' + this.randomID();\r\n    }\r\n    loadDefaultImage = (e) => {\r\n        e.target.src = tempAvatar;\r\n    }\r\n    close = () => {\r\n        this.setState({\r\n            keyword: '',\r\n        })\r\n    }\r\n    render() {\r\n        var { listContact } = this.state;\r\n        if (this.state.keyword) {\r\n            listContact = listContact.filter((list) => {\r\n                return list.Username.toLowerCase().indexOf(this.state.keyword) !== -1\r\n                    || list.Lastname.toLowerCase().indexOf(this.state.keyword) !== -1\r\n                    || list.Firstname.toLowerCase().indexOf(this.state.keyword) !== -1\r\n\r\n            })\r\n        }\r\n        if(listContact)\r\n        {\r\n            var showResult = listContact.map((contact, index) => {\r\n                return (\r\n                    <div className=\"contact add-new-member\"\r\n                        key={contact.Username}\r\n                        style={{backgroundColor: this.state.currentColor}}\r\n                        onClick={() => this.addMember(contact.Username)}\r\n                        data-dismiss=\"modal\"\r\n                        >\r\n                        <img\r\n                            src={\"data:image/*;base64,\"+contact.Avatar.data}\r\n                            className=\"img-responsive avatar\"\r\n                            onError={this.loadDefaultImage}\r\n                            alt=\"img\" />\r\n                        <div>\r\n                            <span className=\"username-receiver\">{contact.Username}</span>\r\n                            <span className=\"fullname-receiver grey-text\">{contact.Firstname+\" \"+contact.Lastname}</span>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            });\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div \r\n                    className=\"modal fade\" \r\n                    id=\"ModalAddNewMember\" \r\n                    tabIndex=\"-1\" \r\n                    data-backdrop=\"static\" \r\n                    role=\"dialog\" \r\n                    aria-labelledby=\"myModalLabel\"\r\n                    aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog\" role=\"document\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header text-center\">\r\n                                <h4 className=\"modal-title w-100 font-weight-bold\">Add new member</h4>\r\n                                <button \r\n                                    type=\"button\" \r\n                                    className=\"close\" \r\n                                    data-dismiss=\"modal\" \r\n                                    aria-label=\"Close\">\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"modal-body  \">\r\n                                <div className=\"md-form \">\r\n                                    <input\r\n                                        className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        name=\"keyword\"\r\n                                        defaultValue={this.state.keyword}\r\n                                        onChange={this.onSearch}\r\n                                        placeholder=\"Search\"\r\n                                        aria-label=\"Search\" />\r\n                                </div>\r\n                                <span className=\"txt-side-bar ml-0\">PEOPLE</span>\r\n                                <div className=\"result-search ml-1 mb-3\">\r\n                                    {showResult}\r\n                                </div>\r\n                            </div>\r\n                            <span className=\"text-center\">{this.state.notification}</span>\r\n                            <div className=\"modal-footer d-flex justify-content-center\">\r\n                                <button\r\n                                    className=\"btn \"\r\n                                    id=\"btnClose\"\r\n                                    onClick={this.close}\r\n                                    data-dismiss=\"modal\"\r\n                                >Cancel</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default addNewMember\r\n","import React, { Component } from 'react';\r\nimport './RightSideBar/RightSideBar.css'\r\nimport tempAvatar from '../../../ava.jpg'\r\nimport tempGrAva from '../../../camera.jpg'\r\nimport { checkStatusFr, getInfoRoom, getListContact, getListMembers, updateRoom } from '../../../service/UserService';\r\nimport Resizer from 'react-image-file-resizer'\r\nimport io from 'socket.io-client';\r\nimport AddNewMember from './RightSideBar/addNewMember'\r\nclass RightSideBar extends Component {\r\n    _isMounted = false;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isFriend: \"\",\r\n            members: [],\r\n            avaGr: '',\r\n            listContact:'',\r\n            group: this.props.infoGroup ? this.props.infoGroup : ''\r\n\r\n        }\r\n        this.socket = null;\r\n    }\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n        if (this.props.showInfo)\r\n            this.isFriend();\r\n        else {\r\n            this.getListMembers()\r\n            this.getInfoRoom()\r\n            this.getListContact('')\r\n        }\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps) {\r\n            if (this.props.showInfo)\r\n                this.isFriend();\r\n            else {\r\n                this.getListMembers()\r\n                this.getInfoRoom();\r\n                this.getListContact('')\r\n            }\r\n\r\n        }\r\n    }\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n      }\r\n    getListContact = async (txtSearch) => {\r\n        await getListContact([this.props.username, txtSearch])\r\n            .then(res =>\r\n                {\r\n                    if(this._isMounted)\r\n                    {\r\n                        this.setState({\r\n                            listContact: res\r\n                        })\r\n                    }\r\n                }\r\n\r\n            ).catch(err => console.log(err));\r\n    }\r\n    getInfoRoom = async () => {\r\n        await getInfoRoom(this.props.infoGroup.ID_Room)\r\n            .then(res => {\r\n                if(this._isMounted)this.setState({ group: res[0] })\r\n            })\r\n    }\r\n    getListMembers = async () => {\r\n        await getListMembers(this.props.infoGroup.ID_Room)\r\n            .then(res => {\r\n                if(this._isMounted)this.setState({ members: res })\r\n            })\r\n    }\r\n    isFriend = async () => {\r\n        var isFr = '';\r\n        await checkStatusFr(this.props.username, this.props.showInfo.Username)\r\n            .then(res => {\r\n                if (res.result === 'Not friend')\r\n                    isFr = false;\r\n                if (res.result === 'Already friend')\r\n                    isFr = true;\r\n                    if(this._isMounted) this.setState({\r\n                    isFriend: isFr\r\n                })\r\n            })\r\n    }\r\n\r\n    loadDefaultImage = (e) => {\r\n        if (this.props.showInfo)\r\n            e.target.src = tempAvatar;\r\n        else\r\n            e.target.src = tempGrAva;\r\n\r\n    }\r\n    resizeFile = (file) => new Promise(resolve => {\r\n        Resizer.imageFileResizer(file, 150, 150, 'JPEG', 100, 0,\r\n            uri => {\r\n                resolve(uri);\r\n            },\r\n            'base64'\r\n        );\r\n    })\r\n    onChangeFile = async (e) => {\r\n        var target = e.target.files[0];\r\n        const image = this.resizeFile(target);\r\n        await image.then(res => {\r\n            var r = res.slice(res.indexOf(',') + 1);\r\n            this.setState({\r\n                avaGr: r,\r\n            })\r\n            this.updateRoom();\r\n        });\r\n\r\n    }\r\n    updateRoom = async () => {\r\n        await updateRoom(this.props.infoGroup.ID_Room, this.state.avaGr)\r\n            .then(res => {\r\n                console.log(res.results)\r\n                if (res.results === 'Updated') {\r\n                    this.socket = io('localhost:3070');\r\n                    this.socket.emit('updateroom', { id: this.props.infoGroup.ID_Room, user: this.props.username })\r\n                }\r\n            })\r\n    }\r\n\r\n    randomID() {\r\n        return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\r\n    }\r\n    generateID() {\r\n        return this.randomID() + this.randomID() + '-' + this.randomID();\r\n    }\r\n    render() {\r\n        var { showInfo, infoGroup } = this.props;\r\n        var { members } = this.state\r\n        if (infoGroup !== null && showInfo === null) {\r\n            var memberGroup = members.map((info, index) => {\r\n                return (\r\n                    <div className=\"info-member\" key={info.Username}>\r\n                        <img\r\n                            src={\"data:image/*;base64,\" + info.Avatar.data}\r\n                            className=\"img-responsive avatar\"\r\n                            alt=\"img\"\r\n                            onError={this.loadDefaultImage}\r\n                        />\r\n                        <div>\r\n                            <span className=\"name-receiver\">\r\n                                {info.Firstname === '' && info.Lastname === '' ?\r\n                                    info.Username : info.Firstname + \" \" + info.Lastname}\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            })\r\n        }\r\n        if (showInfo !== null) {\r\n            var { isFriend } = this.state;\r\n            return (\r\n                <div className=\"card show-info\">\r\n                    <h5 className=\"card-header info-color blue-gradient white-text text-center py-4\">\r\n                        <div>\r\n                            <img\r\n                                src={\"data:image/jpg;base64,\" + showInfo.Avatar.data}\r\n                                alt=\"avatar\"\r\n                                className=\"rounded-circle img-responsive modal-title\"\r\n                                onError={this.loadDefaultImage}\r\n                                id=\"avaReceiver\" />\r\n                            <span className=\"name-receiver\"><h5><strong>{showInfo.Firstname === '' && showInfo.Lastname === '' ?\r\n                                showInfo.Username : showInfo.Firstname + \" \" + showInfo.Lastname}</strong></h5></span>\r\n                            {isFriend ? <span className=\"status-activity\">\r\n                                {showInfo.TimeOnline !== null && showInfo.TimeOffline === null ? 'Offline' : 'Online'}</span> : ''}\r\n\r\n                        </div>\r\n\r\n                    </h5>\r\n                    <div className=\"card-body\">\r\n                        <span className=\"txt-side-bar\">INFORMATION</span>\r\n                        <span className=\"divider\"></span>\r\n                        <hr className=\"solid\" />\r\n                        {isFriend ? <table className=\"table table-sm text-left\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td><i className=\"fas fa-phone-alt \"></i></td>\r\n                                    <td>{showInfo.Phone}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><i className=\"fas fa-mail-bulk\"></i></td>\r\n                                    <td>{showInfo.Email}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><i className=\"fas fa-birthday-cake \"></i></td>\r\n                                    <td>{showInfo.DateOfBirth}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><i className=\"fas fa-home \"></i></td>\r\n                                    <td>{showInfo.Address}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><i className=\"fas fa-city \"></i></td>\r\n                                    <td>{showInfo.City}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><i className=\"fas fa-venus-mars \"></i></td>\r\n                                    <td>{showInfo.Gender === 1 ? 'Female' : 'Male'}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                            : <div className='text-center mt-5'>Just friends could see this information</div>}\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n\r\n        if (infoGroup !== null)\r\n            return (\r\n                <div className=\"card show-info-member-gr\">\r\n                    <h5 className=\"card-header info-color blue-gradient white-text text-center py-4\">\r\n                        <div>\r\n                            <label src={\"data:image/jpg;base64,\" + this.state.group.Avatar.data}\r\n                                alt=\"ava\"\r\n                                onError={this.loadDefaultImage}\r\n                                className=\"rounded-circle img-responsive modal-title avatar-pic-gr mb-0 mt-3\"\r\n                                style={this.state.group.Avatar.data === '' ? { backgroundImage: \"url('\" + tempGrAva + \"')\" }\r\n                                    : { backgroundImage: \"url('data:image/jpg;base64,\" + this.state.group.Avatar.data + \"')\" }}\r\n                            >\r\n                                <input\r\n                                    type=\"file\"\r\n                                    style={{ display: \"none\" }}\r\n                                    onChange={this.onChangeFile}\r\n                                />\r\n                            </label>\r\n                            <span className=\"name-receiver\"><h5><strong>{infoGroup.NameRoom}</strong></h5></span>\r\n                        </div>\r\n                    </h5>\r\n                    <div className=\"card-body show-info-member-gr\">\r\n                        <span className=\"txt-side-bar\">LIST MEMBERS</span>\r\n                        <hr className=\"solid\" />\r\n                        <div \r\n                            className=\"add-new-member\" \r\n                            onClick={this.addNewMember}\r\n                            data-toggle=\"modal\"\r\n                            data-target=\"#ModalAddNewMember\"\r\n                        ><i className=\"fas fa-plus\"></i> Add member</div>\r\n                        <AddNewMember \r\n                        key={this.generateID()}\r\n                        listContact={this.state.listContact}\r\n                        members={this.state.members}\r\n                        id={infoGroup.ID_Room}\r\n                        username={this.props.username}\r\n                        />\r\n                        {memberGroup}\r\n                    </div>\r\n                </div>\r\n            )\r\n    }\r\n}\r\nexport default RightSideBar\r\n","import React, { Component } from 'react';\r\n\r\nclass MessageSend extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: \"\"\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.type === \"image\") {\r\n            this.setState({id: this.generateID().toString()});\r\n        }\r\n    }\r\n\r\n    randomID() {\r\n        return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\r\n    }\r\n    generateID() {\r\n        return this.randomID() + this.randomID() + this.randomID();\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"row message-body\">\r\n                <div className=\"col-sm-12 message-main-sender\">\r\n                    <div className=\"sender\">\r\n                        <div className=\"message-text\">\r\n                            {this.props.type === \"image\"\r\n                                ? \r\n                                <div>\r\n                                    <span style={{ width: \"50%\" }} data-toggle=\"modal\" data-target={`#Modal${this.state.id}`}>\r\n                                        <img src={\"data:image/jpg;base64,\" + this.props.message} alt=\"imagesend\"></img>\r\n                                    </span>\r\n                                    <div className=\"modal fade\" id={`Modal${this.state.id}`} tabIndex=\"-1\" data-backdrop=\"static\" role=\"dialog\" aria-labelledby=\"myModalLabel\"\r\n                                        aria-hidden=\"true\">\r\n                                        <div className=\"modal-dialog\" role=\"document\">\r\n                                            <div className=\"modal-content\">\r\n                                                <div className=\"modal-header text-center\">\r\n                                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                                        <span aria-hidden=\"true\">&times;</span>\r\n                                                    </button>\r\n                                                </div>\r\n                                                <div className=\"modal-body\">\r\n                                                    <img style={{ width: \"100%\" }} src={\"data:image/jpg;base64,\" + this.props.message} alt=\"imagesend\"></img>\r\n                                                </div>\r\n                                                <div className=\"modal-footer d-flex justify-content-center\">\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                : this.props.message}\r\n                        </div>\r\n                        <span className=\"message-time pull-right\">\r\n                            {this.props.time}\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MessageSend;","import React, { Component } from 'react';\r\nimport tempAvatar from '../../../../ava.jpg'\r\nclass MessageReceive extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: \"\"\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.type === \"image\") {\r\n            this.setState({id: this.generateID().toString()});\r\n        }\r\n    }\r\n\r\n    randomID() {\r\n        return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\r\n    }\r\n    generateID() {\r\n        return this.randomID() + this.randomID();\r\n    }\r\n    \r\n    loadDefaultImage = (e) => {\r\n        e.target.src = tempAvatar;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row message-body\">\r\n                <div className=\"col-sm-12 message-main-receiver\">\r\n                    <div className=\"message-avatar\" style={{ display: \"inline\" }}>\r\n                        <div className=\"heading-avatar-icon\" style={{ display: \"inline\" }}>\r\n                            <img\r\n                                src={\"data:image/jpg;base64,\" + this.props.image}\r\n                                onError={this.loadDefaultImage}\r\n                                alt=\"ava\"\r\n                                id=\"img-mess\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"receiver \">\r\n                        <div className=\"message-text\">\r\n                            {/* {this.props.message} */}\r\n                            {this.props.type === \"image\"\r\n                                ? \r\n                                <div>\r\n                                    <span style={{width:\"60%\"}} data-toggle=\"modal\" data-target={`#Modal${this.state.id}`}>\r\n                                        <img src={\"data:image/jpg;base64,\" + this.props.message} alt=\"imagesend\"></img>\r\n                                    </span>\r\n                                    <div className=\"modal fade\" id={`Modal${this.state.id}`} tabIndex=\"-1\" data-backdrop=\"static\" role=\"dialog\" aria-labelledby=\"myModalLabel\"\r\n                                        aria-hidden=\"true\">\r\n                                        <div className=\"modal-dialog\" role=\"document\">\r\n                                            <div className=\"modal-content\">\r\n                                                <div className=\"modal-header text-center\">\r\n                                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                                        <span aria-hidden=\"true\">&times;</span>\r\n                                                    </button>\r\n                                                </div>\r\n                                                <div className=\"modal-body\">\r\n                                                    <img style={{ width: \"100%\" }} src={\"data:image/jpg;base64,\" + this.props.message} alt=\"imagesend\"></img>\r\n                                                </div>\r\n                                                <div className=\"modal-footer d-flex justify-content-center\">\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                : this.props.message}\r\n                        </div>\r\n                        <span className=\"message-time pull-right\">\r\n                            {this.props.time}\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MessageReceive;","import React, { Component, createRef } from 'react';\r\nimport './Conversation/Conversation.css'\r\nimport io from 'socket.io-client';\r\nimport dateFormat from 'dateformat';\r\nimport { getMessages, addMessage, checkStatusFr, sendRequest } from '../../../service/UserService';\r\nimport MessageSend from './Conversation/MessageSend';\r\nimport MessageReceive from './Conversation/MessageReceive';\r\nimport tempAvatar from '../../../ava.jpg';\r\nimport 'emoji-mart/css/emoji-mart.css';\r\nimport { Picker } from 'emoji-mart';\r\nimport Resizer from 'react-image-file-resizer';\r\n\r\nclass ConvNonGroup extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            messages: [],\r\n            isFriend: \"\",\r\n            text: \"\",\r\n            type: \"\",\r\n            id: \"\"\r\n        };\r\n        this.socket = null;\r\n        this.txtMessage = createRef();\r\n        this.inputFile = createRef();\r\n    }\r\n    focusTxtMess = () => {\r\n        this.txtMessage.current.focus();\r\n    }\r\n    getChat = () => {\r\n        getMessages(this.props.id)\r\n            .then(res => {\r\n                var chats = [];\r\n                res.forEach((mess, index) => {\r\n                    if (mess.ID_Sender === this.props.showInfo.Username) {\r\n                        var data = [false, mess.Message, mess.TimeSend];\r\n                        chats.push(data);\r\n                    } else {\r\n                        data = [true, mess.Message, mess.TimeSend];\r\n                        chats.push(data);\r\n                    }\r\n                });\r\n                this.setState({ messages: chats });\r\n            }\r\n            ).catch(err => console.log(err));\r\n    }\r\n    isFriend = async () => {\r\n        var isFr = '';\r\n        await checkStatusFr(this.props.username, this.props.showInfo.Username)\r\n            .then(res => {\r\n                if (res.result === 'Not friend')\r\n                    isFr = false;\r\n                if (res.result === 'Already friend')\r\n                    isFr = true;\r\n                this.setState({\r\n                    isFriend: isFr\r\n                })\r\n            })\r\n    }\r\n    componentDidMount() {\r\n        this.socket = io('localhost:3070');\r\n        this.socket.emit('joinRoom', this.props.id);\r\n        this.socket.on('newMessage', (response) => { this.newMessage(response) }); //lắng nghe event 'newMessage' và gọi hàm newMessage khi có event\r\n        this.getChat();\r\n        this.isFriend();\r\n        // this.setState({id: this.state.id});\r\n    }\r\n    componentWillUnmount() {\r\n        this.socket.disconnect();\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps) {\r\n            this.isFriend();\r\n        }\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props !== prevProps && this.props !== null)\r\n        {\r\n            this.isFriend()\r\n        }\r\n        this.messagesEnd.scrollIntoView({ block: 'end', behavior: 'smooth' });\r\n    }\r\n    newMessage(m) {\r\n        var messages = this.state.messages;\r\n        var data = [false, m[0], dateFormat(new Date(), \"yyyy-mm-dd HH:MM:ss\"), m[1]];\r\n        messages.push(data);\r\n        this.setState({\r\n            messages: messages\r\n        });\r\n    }\r\n    onSendMessage = () => {\r\n        console.log(this.props.id)\r\n        var { messages } = this.state;\r\n        if (this.state.type === \"image\") {\r\n            var data = [true, this.state.text, dateFormat(new Date(), \"yyyy-mm-dd HH:MM:ss\"), 'image'];\r\n            messages.push(data);\r\n            this.socket.emit(\"newMessage\", [this.props.id, this.state.text, 'image']);\r\n            this.txtMessage.current.value = \"\";\r\n            this.setState({\r\n                messages: messages,\r\n                text: \"\",\r\n                type: \"\"\r\n            });\r\n        }\r\n\r\n        if (this.txtMessage.current.value !== \"\") {\r\n            data = [true, this.txtMessage.current.value, dateFormat(new Date(), \"yyyy-mm-dd HH:MM:ss\"), 'text'];\r\n            messages.push(data);\r\n            this.socket.emit(\"newMessage\", [this.props.id, this.txtMessage.current.value]);\r\n            this.txtMessage.current.value = \"\";\r\n            addMessage([this.props.username, this.props.id, data[1], data[2]]);\r\n            this.setState({\r\n                messages: messages\r\n            });\r\n\r\n        }\r\n        else return;\r\n    }\r\n    onEnterPress = (e) => {\r\n        if (e.key === 'Enter') {\r\n            e.preventDefault();\r\n            this.onSendMessage();\r\n        }\r\n    }\r\n    closeConvTab = () => {\r\n        this.props.closeConvTab(this.props.showInfo)\r\n    }\r\n    loadDefaultImage = (e) => {\r\n        e.target.src = tempAvatar;\r\n    }\r\n    addEmoji = e => {\r\n        let emoji = e.native;\r\n        this.txtMessage.current.value += emoji;\r\n    };\r\n    onUnfriend = () => {\r\n        this.socket.emit('unfriend', { idroom: this.props.id, user: this.props.username, friend: this.props.showInfo.Username });\r\n    }\r\n    onAddfriend = async() => {\r\n        await this.sendRequest();\r\n        // .then(res=>\r\n        //     {\r\n        //         console.log(res);\r\n        //         if(res.idroom_temp)\r\n        //         {\r\n        //             this.props.idroom_temp(res.idroom_temp)\r\n        //         }\r\n        //     })\r\n    }\r\n    sendRequest = async () => {\r\n        await sendRequest(this.props.id, this.props.username, this.props.showInfo.Username, dateFormat(new Date(), \"yyyy-mm-dd HH:MM:ss\"))\r\n            .then(res => {\r\n                if (res.result === \"Sent friend request\") {\r\n                    this.setState({\r\n                        isFriend: \"\",\r\n                        id: `${this.props.username}-${this.props.showInfo.Username}`\r\n                    })\r\n                }\r\n                \r\n                if (res.idroom_temp) {\r\n                    console.log(res.idroom_temp);\r\n                    this.props.loadHeader(this.props.showInfo.Username);\r\n                    this.props.idroom_temp(res.idroom_temp);\r\n                }\r\n            })\r\n    }\r\n    resizeFile = (file) => new Promise(resolve => {\r\n        Resizer.imageFileResizer(file, 250, 250, 'JPEG', 100, 0,\r\n        uri => {\r\n            resolve(uri);},\r\n            'base64'\r\n        );\r\n    })\r\n    _onChange = (e) => {\r\n        var target = e.target.files[0];\r\n        const image =  this.resizeFile(target);\r\n        image.then(res => {\r\n            var r = res.slice(res.indexOf(',')+1);\r\n            this.setState({text: r, type: 'image'});\r\n            this.txtMessage.current.value = \"(image)\";\r\n        });\r\n    }\r\n    onChangeMessage = (e) => {\r\n        var target = e.target;\r\n        var value = target.value;\r\n        this.setState({\r\n            text: value,\r\n            type: 'text'\r\n        });\r\n    }\r\n    render() {\r\n        var { messages, isFriend } = this.state;\r\n        var { showInfo } = this.props;\r\n\r\n        var listMessage = messages.map((message, index) => {\r\n            if (message[0])\r\n                return <MessageSend\r\n                    key={index}\r\n                    message={message[1]}\r\n                    time={message[2]}\r\n                    type={message[3]} />\r\n            else\r\n                return <MessageReceive\r\n                    key={index}\r\n                    message={message[1]}\r\n                    time={message[2]}\r\n                    type={message[3]}\r\n                    image={showInfo.Avatar.data}\r\n                />\r\n        });\r\n\r\n        return (\r\n            <div className=\"conversation\">\r\n                <div className=\"row heading no-gutters\">\r\n                    <div className=\"col-xs-2 col-sm-2 col-md-2 col-lg-2 \">\r\n                        <div className=\"heading-avatar\">\r\n                            <div className=\"heading-avatar-icon\">\r\n                                <img\r\n                                    src={\"data:image/jpg;base64,\" + showInfo.Avatar.data}\r\n                                    alt=\"ava\"\r\n                                    id=\"img-header\"\r\n                                    onError={this.loadDefaultImage}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"col-xs-9 col-sm-9 col-md-9 col-lg-9 \">\r\n                        <div className=\"heading-name\">\r\n                            <a className=\"heading-name-meta\" href=\"/#\">{showInfo.Firstname === '' ? showInfo.Username : showInfo.Firstname}</a>\r\n                            <span className=\"heading-online\">\r\n                                {(showInfo.Time_Online !== null && showInfo.Time_Offline === null) ? 'Online' : 'Offline'}\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-xs-1 col-sm-1 col-md-1 col-lg-1 \">\r\n                        <a\r\n                            className=\"heading-dots dropdown mt-2 ml-4 w-75\"\r\n                            type=\"button\"\r\n                            data-toggle=\"dropdown\"\r\n                            aria-expanded=\"false\"\r\n                            href=\"/#\">\r\n                            <i className=\"fa fa-ellipsis-v fa-2x \" aria-hidden=\"true\"></i></a>\r\n                        <div className=\"heading-dots dropdown-menu dropdown-menu-right\">\r\n                            <a\r\n                                className=\"dropdown-item\"\r\n                                href=\"/#\"\r\n                                onClick={this.closeConvTab}\r\n                            >Close</a>\r\n                            <a\r\n                                className=\"dropdown-item\"\r\n                                href=\"/#\"\r\n                                onClick={isFriend === true ? this.onUnfriend : (isFriend === '' ? e => e.preventDefault() : this.onAddfriend)}\r\n                            >{isFriend === true ? 'Unfriend' : (isFriend === '' ? 'Not accept' : 'Add friend')}</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row message\" id=\"conversation\">\r\n                    <div className=\"row message-previous\">\r\n                        <div className=\"col-sm-12 previous\">\r\n                            <a id=\"ankitjain28\" name=\"20\" href=\"/#\">\r\n                                Show Previous Message!\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                    {listMessage}\r\n                    <div\r\n                        ref={el => {\r\n                            this.messagesEnd = el;\r\n                        }}\r\n                        style={{ float: \"left\", clear: \"both\" }}\r\n                    />\r\n                </div>\r\n                <div className=\"list-emoji\">\r\n                    <span id=\"emoji\"\r\n                        className=\"width-300 dropdown-menu dropdown-menu-lg-left dropdown-secondary\">\r\n                        <Picker onSelect={this.addEmoji} />\r\n                    </span>\r\n                </div>\r\n                <div className=\"row reply\">\r\n                    <div className=\"col-sm-1 col-xs-1 reply-emojis\">\r\n                        <i className=\"fas fa-smile-beam fa-2x\" data-toggle=\"collapse\" data-target=\"#emoji\"></i>\r\n                    </div>\r\n                    <div className=\"col-sm-1 col-xs-1 reply-recording\">\r\n                        <form>\r\n                            <label htmlFor=\"file-upload\">\r\n                                <i className=\"fas fa-folder-open fa-2x\"></i>\r\n                            </label>\r\n                            <input \r\n                                id=\"file-upload\" accept=\"image/*\"\r\n                                type=\"file\"\r\n                                ref={this.inputFile}\r\n                                style={{display:'none'}} \r\n                                onChange = {this._onChange}\r\n                            />\r\n                        </form>\r\n                        {/* <i className=\"fas fa-folder-open fa-2x\" aria-hidden=\"true\"></i> */}\r\n                    </div>\r\n                    <div className=\"col-sm-9 col-xs-9 reply-main\">\r\n                        <textarea\r\n                            className=\"txtConv form-control\"\r\n                            rows=\"1\" id=\"comment\" placeholder=\"Aa\" autoFocus\r\n                            ref={this.txtMessage}\r\n                            onClick={this.focusTxtMess}\r\n                            onKeyDown={this.onEnterPress}\r\n                            onChange = {this.onChangeMessage}\r\n                        ></textarea>\r\n                    </div>\r\n                    <div className=\"col-sm-1 col-xs-1 reply-send\">\r\n                        <i\r\n                            className=\"fas fa-paper-plane fa-2x\" aria-hidden=\"true\"\r\n                            onClick={this.onSendMessage}\r\n                        ></i>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ConvNonGroup;\r\n","import React, { Component } from 'react';\r\nimport './Conversation/Conversation.css'\r\nimport tempAvatar from '../../../ava.jpg'\r\nimport io from 'socket.io-client';\r\nimport dateFormat from 'dateformat';\r\nimport { getMessages, addMessage, getInfoMemGroup, getInfoRoom } from '../../../service/UserService';\r\nimport MessageSend from './Conversation/MessageSend';\r\nimport MessageReceive from './Conversation/MessageReceive';\r\nimport 'emoji-mart/css/emoji-mart.css';\r\nimport { Picker } from 'emoji-mart';\r\nimport Resizer from 'react-image-file-resizer';\r\n\r\nclass ConvGroup extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            messages: [],\r\n            members: [],\r\n            group: this.props.infoGroup,\r\n            text: \"\",\r\n            type: \"\"\r\n        };\r\n        this.socket = null;\r\n        this.txtMessage = React.createRef();\r\n        this.inputFile = React.createRef();\r\n    }\r\n    getChat = () => {\r\n        getMessages(this.props.id)\r\n            .then(res => {\r\n                var chats = [];\r\n                res.forEach((mess, index) => {\r\n                    var data = [mess.ID_Sender, mess.Message, mess.TimeSend];\r\n                    chats.push(data);\r\n                });\r\n                this.setState({ messages: chats });\r\n            }\r\n            ).catch(err => console.log(err));\r\n    }\r\n\r\n    getMembers = () => {\r\n        getInfoMemGroup(this.props.id)\r\n            .then(res => {\r\n                var mems = [];\r\n                res.forEach((mem, index) => {\r\n                    mems.push(mem);\r\n                });\r\n                this.setState({ members: mems });\r\n            }\r\n            ).catch(err => console.log(err));\r\n    }\r\n    getInfoRoom = async () => {\r\n        await getInfoRoom(this.props.infoGroup.ID_Room)\r\n            .then(res => {\r\n                this.setState({ group: res[0] })\r\n            })\r\n    }\r\n    componentDidMount() {\r\n        this.socket = io('localhost:3070');\r\n        this.socket.emit('joinRoom', this.props.id);\r\n        this.socket.on('newMessage', (response) => { this.newMessage(response) });\r\n        this.getChat();\r\n        this.getMembers();\r\n        this.getInfoRoom();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.socket.disconnect();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.messagesEnd.scrollIntoView({ block: 'end', behavior: 'smooth' });\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps) {\r\n            // this.getChat();\r\n            this.getMembers();\r\n            this.getInfoRoom();\r\n        }\r\n    }\r\n    newMessage(m) {\r\n        var messages = this.state.messages;\r\n        var data = [m[1], m[0], dateFormat(new Date(), \"yyyy-mm-dd HH:MM:ss\"), m[2]];\r\n        messages.push(data);\r\n        this.setState({\r\n            messages: messages\r\n        });\r\n    }\r\n\r\n    onSendMessage = () => {\r\n        var { messages } = this.state;\r\n        if (this.state.type === \"image\") {\r\n            var data = [this.props.username, this.state.text, dateFormat(new Date(), \"yyyy-mm-dd HH:MM:ss\"), 'image'];\r\n            messages.push(data);\r\n            this.socket.emit(\"newMessage\", [this.props.id, this.state.text, this.props.username, 'image']);\r\n            this.txtMessage.current.value = \"\";\r\n            this.setState({\r\n                messages: messages,\r\n                text: \"\",\r\n                type: \"\"\r\n            });\r\n        }\r\n\r\n        if (this.txtMessage.current.value !== \"\") {\r\n            data = [this.props.username, this.txtMessage.current.value, dateFormat(new Date(), \"yyyy-mm-dd HH:MM:ss\"), 'text'];\r\n            messages.push(data);\r\n            this.socket.emit(\"newMessage\", [this.props.id, this.txtMessage.current.value, this.props.username]);\r\n            this.txtMessage.current.value = \"\";\r\n            addMessage([this.props.username, this.props.id, data[1], data[2]]);\r\n            this.setState({\r\n                messages: messages\r\n            });\r\n        }\r\n        else return;\r\n    }\r\n\r\n    onEnterPress = (e) => {\r\n        if (e.key === 'Enter') {\r\n            e.preventDefault();\r\n            this.onSendMessage();\r\n        }\r\n    }\r\n\r\n    findUsername = (username) => {\r\n        if (username === this.props.username)\r\n            return -1;\r\n        else {\r\n            var { members } = this.state;\r\n            var index = -2;\r\n            members.forEach((member, i) => {\r\n                if (member.Username === username) {\r\n                    index = i;\r\n                }\r\n            })\r\n            return index;\r\n        }\r\n    }\r\n    closeConvTab = () => {\r\n        this.props.closeConvTab(this.props.showInfo)\r\n    }\r\n    loadDefaultImage = (e) => {\r\n        e.target.src = tempAvatar;\r\n    }\r\n    addEmoji = e => {\r\n        let emoji = e.native;\r\n        this.txtMessage.current.value += emoji;\r\n    };\r\n    leaveGroup = () => {\r\n        this.socket.emit('leavegroup', { idroom: this.props.id, user: this.props.username, members: this.state.members });\r\n        this.props.closeConvTab(this.props.showInfo)\r\n    }\r\n    resizeFile = (file) => new Promise(resolve => {\r\n        Resizer.imageFileResizer(file, 250, 250, 'JPEG', 100, 0,\r\n        uri => {\r\n            resolve(uri);},\r\n            'base64'\r\n        );\r\n    })\r\n    _onChange = (e) => {\r\n        var target = e.target.files[0];\r\n        const image =  this.resizeFile(target);\r\n        image.then(res => {\r\n            var r = res.slice(res.indexOf(',')+1);\r\n            this.setState({text: r, type: 'image'});\r\n            this.txtMessage.current.value = \"(image)\";\r\n        });\r\n    }\r\n    onChangeMessage = (e) => {\r\n        var target = e.target;\r\n        var value = target.value;\r\n        this.setState({\r\n            text: value,\r\n            type: 'text'\r\n        });\r\n    }\r\n    render() {\r\n        var { messages, members } = this.state;\r\n        var listMessage = messages.map((message, index) => {\r\n            var i = this.findUsername(message[0]);\r\n            if (i === -1)\r\n                return <MessageSend\r\n                    key={index}\r\n                    message={message[1]}\r\n                    time={message[2]}\r\n                    type={message[3]} />\r\n            else\r\n                return <MessageReceive\r\n                    key={index}\r\n                    message={message[1]}\r\n                    time={message[2]}\r\n                    type={message[3]}\r\n                    image={members[i] ? members[i].Avatar.data : ''}\r\n                />\r\n        });\r\n        return (\r\n            <div className=\"conversation\">\r\n                <div className=\"row heading no-gutters\">\r\n                    <div className=\"col-xs-2 col-sm-2 col-md-2 col-lg-2 \">\r\n                        <div className=\"heading-avatar\">\r\n                            <div className=\"heading-avatar-icon\">\r\n                                <img\r\n                                    src={\"data:image/jpg;base64,\" + this.state.group.Avatar.data}\r\n                                    alt=\"ava\"\r\n                                    id=\"img-header\"\r\n                                    onError={this.loadDefaultImage}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"col-xs-9 col-sm-9 col-md-9 col-lg-9 \">\r\n                        <div className=\"heading-name\">\r\n                            <a className=\"heading-name-meta\" href=\"/#\">{this.state.group.NameRoom}</a>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-xs-1 col-sm-1 col-md-1 col-lg-1 \">\r\n                        <a\r\n                            className=\"heading-dots dropdown mt-2 ml-4 w-75\"\r\n                            type=\"button\"\r\n                            data-toggle=\"dropdown\"\r\n                            aria-expanded=\"false\"\r\n                            href=\"/#\">\r\n                            <i className=\"fa fa-ellipsis-v fa-2x \" aria-hidden=\"true\"></i></a>\r\n                        <div className=\"heading-dots dropdown-menu dropdown-menu-right\">\r\n                            <a\r\n                                className=\"dropdown-item\"\r\n                                href=\"/#\"\r\n                                onClick={this.closeConvTab}\r\n                            >Close</a>\r\n                            <a\r\n                                className=\"dropdown-item\"\r\n                                href=\"/#\"\r\n                                onClick={this.leaveGroup}\r\n                            >Leave</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row message\" id=\"conversation\">\r\n                    <div className=\"row message-previous\">\r\n                        <div className=\"col-sm-12 previous\">\r\n                            <a id=\"ankitjain28\" name=\"20\" href=\"/#\">\r\n                                Show Previous Message!\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                    {listMessage}\r\n                    <div\r\n                        ref={el => {\r\n                            this.messagesEnd = el;\r\n                        }}\r\n                        style={{ float: \"left\", clear: \"both\" }}\r\n                    />\r\n                </div>\r\n                <div className=\"list-emoji\">\r\n                    <span id=\"emoji\"\r\n                        className=\"width-300 dropdown-menu dropdown-menu-lg-left dropdown-secondary\">\r\n                        <Picker onSelect={this.addEmoji} />\r\n                    </span>\r\n                </div>\r\n                <div className=\"row reply\">\r\n                    <div className=\"col-sm-1 col-xs-1 reply-emojis\">\r\n                        <i className=\"fas fa-smile-beam fa-2x\" data-toggle=\"collapse\" data-target=\"#emoji\"></i>\r\n                    </div>\r\n                    <div className=\"col-sm-1 col-xs-1 reply-recording\">\r\n                        <form>\r\n                            <label htmlFor=\"file-upload\">\r\n                                <i className=\"fas fa-folder-open fa-2x\"></i>\r\n                            </label>\r\n                            <input \r\n                                id=\"file-upload\" \r\n                                type=\"file\"\r\n                                ref={this.inputFile}\r\n                                style={{display:'none'}} \r\n                                onChange = {this._onChange}\r\n                            />\r\n                        </form>\r\n                        {/* <i className=\"fas fa-folder-open fa-2x\" aria-hidden=\"true\"></i> */}\r\n                    </div>\r\n                    <div className=\"col-sm-9 col-xs-9 reply-main\">\r\n                        <textarea\r\n                            className=\"txtConv form-control\"\r\n                            rows=\"1\" id=\"comment\" placeholder=\"Aa\" autoFocus\r\n                            ref={this.txtMessage}\r\n                            onKeyDown={this.onEnterPress}\r\n                            onChange={this.onChangeMessage}\r\n                        ></textarea>\r\n                    </div>\r\n                    <div className=\"col-sm-1 col-xs-1 reply-send\">\r\n                        <i\r\n                            className=\"fas fa-paper-plane fa-2x\" aria-hidden=\"true\"\r\n                            onClick={this.onSendMessage}\r\n                        ></i>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ConvGroup;\r\n","import React, { Component } from 'react'\r\nimport './Content.css'\r\nimport LeftSideBar from './Components/LeftSideBar.js'\r\nimport RightSideBar from './Components/RightSideBar.js'\r\nimport ConvNonGroup from './Components/ConvNonGroup.js'\r\nimport ConvGroup from './Components/ConvGroup.js'\r\nimport io from 'socket.io-client';\r\n\r\nclass Content extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showInfo: null,\r\n            infoGroup: null,\r\n            onReload: true,\r\n        }\r\n        this.socket = null;\r\n    }\r\n    componentDidMount() {\r\n        this.socket = io('localhost:3070');\r\n        this.socket.emit('joinUser', this.props.username);\r\n        this.socket.on('onShowNewMessage', (response) => { this.setState({ onReload: !this.state.onReload }) });\r\n        this.socket.on('to-friend-reloadHeader', (response) => this.reloadHeader());\r\n        this.socket.on('unfriend', (res) => \r\n        {\r\n            var {showInfo} = this.state;\r\n            if(showInfo!==null)\r\n            {\r\n                if(showInfo.ID_Room===res.idroom)\r\n                {\r\n                    showInfo.ID_Room = res.idroomTemp;\r\n                    this.setState({showInfo: showInfo});\r\n                }\r\n            }\r\n            this.changeOnReload()\r\n        });\r\n        this.socket.on('userleavedgr', (res) => { this.changeOnReload() });\r\n        this.socket.on('removegroup', (res) => {\r\n            if (this.state.infoGroup !== null) {\r\n                if (this.state.infoGroup.ID_Room === res.idroom)\r\n                    this.closeConvTab();\r\n            }\r\n            this.changeOnReload()\r\n        });\r\n        this.socket.on('addgroup', (res) => { this.changeOnReload() })\r\n        this.socket.on('updateroom', (res) => { this.changeOnReload() })\r\n\r\n    }\r\n    changeOnReload = async () => {\r\n        await this.setState({\r\n            onReload: !this.state.onReload\r\n        })\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps && nextProps.onReload) {\r\n            this.loadHeader(nextProps.onReload);\r\n            if (nextProps.onReload !== \"\" && this.state.showInfo!==null) {\r\n                var {showInfo} = this.state;\r\n                showInfo.ID_Room = `${nextProps.onReload}-${this.props.username}`;\r\n                this.setState({showInfo: showInfo});\r\n            }\r\n            this.setState({\r\n                onReload: !this.state.onReload\r\n            })\r\n        }\r\n    }\r\n    reloadHeader = () => {\r\n        this.props.reloadHeader();\r\n    }\r\n    showInfo = (data) => {\r\n        this.setState({\r\n            showInfo: data,\r\n            infoGroup: null,\r\n        })\r\n    }\r\n    infoGroup = (data) => {\r\n        this.setState({\r\n            infoGroup: data,\r\n            showInfo: null\r\n        })\r\n    }\r\n    closeConvTab = () => {\r\n        this.setState({\r\n            showInfo: null,\r\n            infoGroup: null\r\n        })\r\n    }\r\n    idroom_temp = (data) => {\r\n        var {showInfo} = this.state;\r\n        showInfo.ID_Room = data;\r\n        this.setState({showInfo: showInfo});\r\n        this.changeOnReload();\r\n    }\r\n    loadHeader = (data) => {\r\n        console.log(data);\r\n        this.socket.emit('reloadHeader', data);\r\n    }\r\n    onLoad = () => {\r\n        this.changeOnReload();\r\n    }\r\n    randomID() {\r\n        return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\r\n    }\r\n    generateID() {\r\n        return this.randomID() + this.randomID() + '-' + this.randomID();\r\n    }\r\n    render() {\r\n        var { showInfo, infoGroup, onReload } = this.state;\r\n        return (\r\n            <div>\r\n                <div className=\"row no-gutters\">\r\n                    <div className=\"col-xs-3 col-sm-3 col-md-3 col-lg-3\">\r\n                        <LeftSideBar\r\n                            showInfo={this.showInfo}\r\n                            infoGroup={this.infoGroup}\r\n                            username={this.props.username}\r\n                            infoUser={this.props.infoUser}\r\n                            onReload={onReload}\r\n                            loadHeader={this.loadHeader}\r\n                            onLoad={this.onLoad}\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\r\n                        <div className=\"middle-bar\">\r\n                            {(showInfo === null && infoGroup === null) ? '' : (infoGroup !== null ?\r\n                                <ConvGroup\r\n                                    key={this.state.infoGroup.ID_Room}\r\n                                    infoGroup={infoGroup}\r\n                                    username={this.props.username}\r\n                                    onReload={onReload}\r\n                                    id={infoGroup.ID_Room}\r\n                                    closeConvTab={this.closeConvTab}\r\n                                /> :\r\n                                <ConvNonGroup\r\n                                    key={this.state.showInfo.ID_Room}\r\n                                    showInfo={showInfo}\r\n                                    id={this.state.showInfo.ID_Room}\r\n                                    username={this.props.username}\r\n                                    closeConvTab={this.closeConvTab}\r\n                                    onReload={onReload}\r\n                                    idroom_temp={this.idroom_temp}\r\n                                    isFriend={this.state.isFriend}\r\n                                    loadHeader={this.loadHeader}\r\n                                />\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-xs-3 col-sm-3 col-md-3 col-lg-3\">\r\n                        <div className=\"right-bar \">\r\n                            {(showInfo === null && infoGroup === null) ? '' :\r\n                                <RightSideBar\r\n                                    key={this.generateID()}\r\n                                    infoGroup={infoGroup}\r\n                                    username={this.props.username}\r\n                                    onReload={onReload}\r\n                                    showInfo={showInfo}\r\n                                />}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Content\r\n","import React, { Component } from 'react';\r\nimport './Footer.css';\r\nclass Footer extends Component {\r\n  render() {\r\n    return (\r\n        <div >\r\n        <footer className=\"page-footer mdb-color black\">\r\n          <div className=\"footer-copyright text-right py-0.5 mr-5\">© 2020 Copyright:\r\n            <a href=\"/#\"> LetsChat.com</a>\r\n            <a className=\"TermOfUser\" href=\"/#\" data-toggle=\"modal\" data-target=\"#modalTermOfUser\">  Term of user</a>\r\n            <a className=\"Privacy\" href=\"/#\" data-toggle=\"modal\" data-target=\"#modalPrivacy\">  Privacy and cookie policy</a>\r\n          </div>\r\n        </footer>\r\n        <div className=\"modal fade\" id=\"modalTermOfUser\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"modalTermOfUser\"\r\n          aria-hidden=\"true\">\r\n          <div className=\"modal-dialog modal-dialog-centered modal-dialog-scrollable\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header blue-gradient\">\r\n                <h5 className=\"modal-title \" id=\"modalTermOfUser\">Term of user</h5>\r\n                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                Microsoft collects data from you, through our interactions with you and through our products. You provide some of this data directly, and we get some of it by collecting data about your interactions, use, and experiences with our products. The data we collect depends on the context of your interactions with Microsoft and the choices you make, including your privacy settings and the products and features you use. We also obtain data about you from third parties.\r\n                If you represent an organization, such as a business or school, that utilizes Enterprise and Developer Products from Microsoft, please see the Enterprise and developer products section of this privacy statement to learn how we process your data. If you are an end user of a Microsoft product or a Microsoft account provided by your organization, please see the Products provided by your organization and the Microsoft account sections for more information.\r\n                You have choices when it comes to the technology you use and the data you share. When we ask you to provide personal data, you can decline. Many of our products require some personal data to provide you with a service. If you choose not to provide data required to provide you with a product or feature, you cannot use that product or feature. Likewise, where we need to collect personal data by law or to enter into or carry out a contract with you, and you do not provide the data, we will not be able to enter into the contract; or if this relates to an existing product you’re using, we may have to suspend or cancel it. We will notify you if this is the case at the time. Where providing the data is optional, and you choose not to share personal data, features like personalization that use such data will not work for you.\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button type=\"button\" className=\"btn btn-secondary morpheus-den-gradient\" data-dismiss=\"modal\">Close</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"modal fade\" id=\"modalPrivacy\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\"\r\n          aria-hidden=\"true\">\r\n          <div className=\"modal-dialog modal-dialog-centered modal-dialog-scrollable\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header blue-gradient\">\r\n                <h5 className=\"modal-title\" id=\"exampleModalLongTitle\">Privacy and cookie policy</h5>\r\n                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                Your Privacy. Your privacy is important to us. Please read the Microsoft Privacy Statement (https://go.microsoft.com/fwlink/?LinkId=521839) (the \"Privacy Statement\") as it describes the types of data we collect from you and your devices (\"Data\"), how we use your Data, and the legal bases we have to process your Data. The Privacy Statement also describes how Microsoft uses your content, which is your communications with others; postings submitted by you to Microsoft via the Services; and the files, photos, documents, audio, digital works, livestreams and videos that you upload, store, broadcast or share through the Services (\"Your Content\"). Where processing is based on consent and to the extent permitted by law, by agreeing to these Terms, you consent to Microsoft’s collection, use and disclosure of Your Content and Data as described in the Privacy Statement. In some cases, we will provide separate notice and request your consent as referenced in the Privacy Statement.\r\n                </div>\r\n              <div className=\"modal-footer\">\r\n                <button type=\"button\" className=\"btn btn-primary morpheus-den-gradient\" data-dismiss=\"modal\">Close</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        </div>\r\n\r\n\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from 'react';\r\nimport {getNotifications, acceptFriendRequest, readNotification} from '../../../service/UserService';\r\n\r\nclass Notification extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            notifications: [],\r\n            isOpened: true\r\n        };\r\n        this.socket = null;\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getNotifications();\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps) {\r\n            this.getNotifications();\r\n        }\r\n    }\r\n\r\n    getNotifications = async() => {\r\n        await getNotifications(this.props.username)\r\n            .then(res => \r\n                this.setState({\r\n                    notifications: res,\r\n                    isOpened: !this.state.isOpened\r\n                })\r\n            ).catch(err => console.log(err));\r\n    }\r\n\r\n    onAccept = (sender, check) => {\r\n        acceptFriendRequest([sender, this.props.username, check]);\r\n        if (check === 0) this.props.onReload(sender);\r\n        this.getNotifications();\r\n    }\r\n\r\n    onRead = () => {\r\n        var {isOpened} = this.state;\r\n        if (isOpened) {\r\n            readNotification(this.props.username);\r\n            this.getNotifications();\r\n        }\r\n        else this.setState({isOpened: true});\r\n        \r\n    }\r\n\r\n    render() {\r\n        var {notifications} = this.state;\r\n        var listNotis = notifications.map((noti, index) => {\r\n            if (noti.IsFriend === 0) {\r\n                return  <div key = {index}>\r\n                            <a className=\"dropdown-item waves-effect waves-light\" href=\"/#\">\r\n                                <div className=\"bold-text\">{noti.Firstname} {noti.Lastname}</div> has accepted your friend request.\r\n                            </a>\r\n                        </div>\r\n            } \r\n            else {\r\n                return  <div key = {index}>\r\n                            <a className=\"dropdown-item waves-effect waves-light\" href=\"/#\">\r\n                                <div className=\"bold-text\">{noti.Firstname} {noti.Lastname}</div> send you a friend request.\r\n                                <div style={{height:\"30px\"}}>\r\n                                    <span onClick = {() => this.onAccept(noti.ID_Sender, 0)} className=\"btn-noti btn btn-outline-primary\">Accept</span>\r\n                                    <span onClick = {() => this.onAccept(noti.ID_Sender, 1)} className=\"btn-noti btn btn-primary waves-effect morpheus-den-gradient\">Deny</span>\r\n                                </div>\r\n                            </a>\r\n                        </div>\r\n            }\r\n        });\r\n        \r\n        return (\r\n            <div>\r\n                <ul className=\"navbar-nav ml-auto\">\r\n                    <li className=\"nav-item avatar dropdown\">\r\n                        <a  \r\n                            className=\"nav-link dropdown-toggle\" \r\n                            onClick={this.onRead}\r\n                            id=\"notification-drop\" \r\n                            data-toggle=\"collapse\" \r\n                            href=\"#listNotis\" \r\n                            aria-expanded=\"true\">\r\n                            <span className=\"badge badge-danger ml-2\">{notifications.length}</span>\r\n                            <i className=\"fas fa-bell bell\"></i>\r\n                        </a>\r\n                        <div \r\n                            id=\"listNotis\" \r\n                            className=\"width-300 dropdown-menu dropdown-menu-lg-right dropdown-secondary\" \r\n                            aria-labelledby=\"notification-drop\">\r\n                            {listNotis}\r\n                        </div>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Notification\r\n","import React, { Component } from 'react'\r\nimport './Header.css'\r\n// import SearchUser from './Components/SearchUser'\r\nimport Notification from './Components/Notification'\r\nimport Account from './Components/Account'\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            infoUser: null,\r\n            reload: true\r\n        }\r\n    }\r\n    \r\n    componentWillReceiveProps(nextProps) {\r\n        if(nextProps) {\r\n            this.setState({reload: !this.state.reload});\r\n        }\r\n    }\r\n\r\n    onReload = (data) => {\r\n        this.props.onReload(data);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"mb-1 navbar navbar-expand-sm navbar-bright lighten-1\">\r\n                    <a className=\"navbar-brand \" href=\"window.location.reload()\" ><b className=\"nameApp\">LetsChat</b></a>\r\n\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent-555\">\r\n\r\n                        {/* Right Header */}\r\n                        <ul className=\"navbar-nav ml-auto nav-flex-icons \">\r\n                            {/* Notification */}\r\n                            <li className=\"nav-item notification mr-3 \">\r\n                                <Notification \r\n                                username = {this.props.username} \r\n                                reload={this.state.reload} \r\n                                onReload = {this.onReload}\r\n                                />\r\n                            </li>\r\n                            {/* Account */}\r\n                            <li className=\"nav-item avatar dropdown\">\r\n                                <Account\r\n                                    user={this.props.user}\r\n                                    userFirstname={this.props.userFirstname}\r\n                                    username={this.props.username}\r\n                                    infoUser={this.props.infoUser}\r\n                                />\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Content from '../Components/Content/Content';\nimport Footer from '../Components/Footer/Footer';\nimport Header from '../Components/Header/Header';\n// import io from 'socket.io-client';\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.socket = null;\n    this.state = {\n      data: [],\n      reloadHeader: true,\n      onReload: '',\n    }\n  }\n\n  reloadHeader= () => {\n    this.setState({ reloadHeader: !this.state.reloadHeader });\n  }\n\n  onReload = (data) => {\n    this.setState({ onReload: data });\n  }\n\n  render() {\n    var { data, reloadHeader, onReload } = this.state;\n    return (\n      <div className=\"wrapper\">\n        <header className=\"Header\">\n          <Header\n            key={this.props.user['Username']}\n            user={this.props.user['Avatar']}\n            userFirstname={this.props.user['Firstname']}\n            username={this.props.user['Username']}\n            infoUser={this.props.user}\n            reloadHeader={reloadHeader}\n            onReload={this.onReload}\n          />\n        </header>\n        <div className=\"content\">\n          <Content\n            data={data}\n            infoUser={this.props.user}\n            username={this.props.user['Username']}\n            reloadHeader={this.reloadHeader}\n            onReload={onReload}\n          />\n        </div>\n        <div className=\"Footer\">\n          <Footer />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react'\r\nimport { checkRegister } from '../service/UserService';\r\nimport ava from '../ava.jpg';\r\nexport default class Register extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: \"\",\r\n            pass: \"\",\r\n            confirmPass: \"\",\r\n            phone: \"\",\r\n            notification:\"\",\r\n            avatar: {ava}\r\n        }\r\n    }\r\n    onRegister = (event) => {\r\n        event.preventDefault();\r\n        // console.log(this.state);\r\n        if(this.checkInput()===true)\r\n        {\r\n            this.checkRegister(this.state);\r\n        }\r\n        else\r\n        {\r\n            this.setState({\r\n                notification: \"Confirm password doesn't match\"\r\n            })\r\n        }\r\n    }\r\n    checkInput=()=>\r\n    {\r\n        var {pass,confirmPass}=this.state;\r\n        if(pass!==confirmPass) return false;\r\n        else return true;\r\n    }\r\n    checkRegister=(data)=>\r\n    {\r\n         checkRegister(data)\r\n        .then(res=>\r\n            {\r\n                this.setState({\r\n                    notification : res.result\r\n                })\r\n            }).catch(err => console.log(err));\r\n    }\r\n    onHandleChange=(event)=>\r\n    {\r\n\t\tvar target=event.target;\r\n\t\tvar names=target.name;\r\n\t\tvar values=target.value;\r\n\t\tthis.setState({\r\n\t\t\t[names]: values\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.onRegister}>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"username\"\r\n                    placeholder=\"Username\"\r\n                    required=\"required\"\r\n                    value={this.state.username}\r\n                    onChange={this.onHandleChange} />\r\n                <input\r\n                    type=\"tel\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Phone\"\r\n                    required=\"required\"\r\n                    pattern=\"[0]{1}[0-9]{9}\"\r\n                    value={this.state.phone}\r\n                    onChange={this.onHandleChange} />\r\n                <input\r\n                    type=\"password\"\r\n                    name=\"pass\"\r\n                    placeholder=\"Password\"\r\n                    required=\"required\"\r\n                    value={this.state.pass}\r\n                    onChange={this.onHandleChange} />\r\n                <input\r\n                    type=\"password\"\r\n                    name=\"confirmPass\"\r\n                    placeholder=\"Confirm Password\"\r\n                    required=\"required\"\r\n                    value={this.state.confirmPass}\r\n                    onChange={this.onHandleChange} />\r\n                <span div=\"register-notification\" style={{color:\"red\"}}>{this.state.notification}</span>\r\n                <input type=\"submit\" value=\"Register\" />\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import './Login.css';\r\nimport App from '../Home/App.js';\r\nimport React, { Component, createRef } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {login} from '../service/UserService';\r\nimport Register from '../Register/Register.js';\r\nimport dateFormat from 'dateformat';\r\n\r\nclass Login extends Component\r\n{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user : null,\r\n            incorrectLogin : true\r\n        };\r\n        this.userInput=createRef();\r\n        this.passInput=createRef();\r\n    }\r\n    focusUser=()=>\r\n    {\r\n        this.userInput.current.focus();\r\n    }\r\n    focusPass=()=>\r\n    {\r\n        this.passInput.current.focus();\r\n    }\r\n    componentDidMount() {\r\n        if (localStorage && localStorage.getItem('user')) {\r\n            var user = JSON.parse(localStorage.getItem('user'));\r\n            this.userInput.current.value = user[0];\r\n            this.passInput.current.value = user[1];\r\n            this.onLogIn(\"logged-in\");\r\n        }\r\n    }\r\n    onLogIn = (text) => {\r\n        if (text && text===\"logged-in\") {\r\n            const data = [this.userInput.current.value, this.passInput.current.value, dateFormat(new Date(), \"yyyy-mm-dd HH:MM:ss\"), 'logged-in'];\r\n            login(data).then(result => {\r\n                if  (result !== null) {\r\n                    result.Password = \"\";\r\n                    this.setState({user: result});\r\n                    console.log(result);\r\n                    ReactDOM.render(\r\n                        <React.StrictMode>\r\n                        <App\r\n                            user = {this.state.user}\r\n                        />\r\n                        </React.StrictMode>,\r\n                        document.getElementById('root')\r\n                    );\r\n                }\r\n                else this.setState({incorrectLogin: false});\r\n            });\r\n        }\r\n        else {\r\n            const data = [this.userInput.current.value, this.passInput.current.value, dateFormat(new Date(), \"yyyy-mm-dd HH:MM:ss\"), 'login'];\r\n            login(data).then(result => {\r\n                if  (result !== null) {\r\n                    localStorage.setItem('user', JSON.stringify([data[0], result.Password]));\r\n                    result.Password = \"\";\r\n                    this.setState({user: result});\r\n                    ReactDOM.render(\r\n                        <React.StrictMode>\r\n                        <App\r\n                            user = {this.state.user}\r\n                        />\r\n                        </React.StrictMode>,\r\n                        document.getElementById('root')\r\n                    );\r\n                }\r\n                else this.setState({incorrectLogin: false});\r\n            });\r\n        }\r\n        \r\n    }\r\n\r\n    onEnterPress = (e) => {\r\n        if (e.key === 'Enter')\r\n        {\r\n            e.preventDefault();\r\n            this.onLogIn();\r\n        }\r\n    }\r\n\r\n    onFocus = () => {\r\n        this.setState({incorrectLogin: true});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{marginTop:\"300px\"}} className=\"login-reg-panel morpheus-den-gradient\">\r\n                <div className=\"login-info-box\">\r\n                    <h2>Have an account?</h2>\r\n                    <label id=\"label-register\" htmlFor=\"log-reg-show\">Login</label>\r\n                    <input type=\"radio\" name=\"active-log-panel\" id=\"log-reg-show\" />\r\n                </div>\r\n                            \r\n                <div className=\"register-info-box\">\r\n                    <h2>Don't have an account?</h2>\r\n                    <label id=\"label-login\" htmlFor=\"log-login-show\">Register</label>\r\n                    <input type=\"radio\" name=\"active-log-panel\" id=\"log-login-show\"/>\r\n                </div>\r\n                            \r\n                <div className=\"white-panel\">\r\n                    <div className=\"login-show\">\r\n                        <h2>LOGIN</h2>\r\n                        <input \r\n                            type=\"text\" \r\n                            ref={this.userInput} \r\n                            onClick={this.focusUser}\r\n                            placeholder=\"Username\" \r\n                        />\r\n                        <input \r\n                            type=\"password\" \r\n                            ref={this.passInput}\r\n                            onClick={this.focusPass} \r\n                            placeholder=\"Password\" \r\n                            onKeyDown={this.onEnterPress} \r\n                        />\r\n                        <input type=\"button\" value=\"Login\" onClick={() => this.onLogIn('login')}/>\r\n                        <a href=\"/#\">Forgot password?</a>\r\n                        <p className={this.state.incorrectLogin?\"incorrect-login hidden-p\":\"incorrect-login\"}>Username or Password is incorrect</p>\r\n                    </div>\r\n                    \r\n                    <div className=\"register-show\">\r\n                        <h2>REGISTER</h2>\r\n                        <Register/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;\r\n","import React, { Component } from 'react'\r\nimport Feedback from './Account/Feedback'\r\nimport UpdateProfile from './Account/UpdateProfile'\r\nimport ChangePassword from './Account/ChangePassword'\r\nimport Logout from './Account/Logout'\r\nimport tempAvatar from '../../../ava.jpg'\r\n\r\nclass Account extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            newAvatar: \"\",\r\n            Firstname: \"\",\r\n            Lastname: \"\",\r\n            DateOfBirth: \"\",\r\n            Phone: \"\",\r\n            Email: \"\",\r\n            Address: \"\",\r\n            City: \"\",\r\n            Avatar: '',\r\n            Gender: 0,\r\n            Username: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        var { infoUser } = this.props;\r\n        if (infoUser !== null) {\r\n            this.setState({\r\n                Username: infoUser.Username,\r\n                Firstname: infoUser.Firstname,\r\n                Lastname: infoUser.Lastname,\r\n                DateOfBirth: infoUser.DateOfBirth,\r\n                Phone: infoUser.Phone,\r\n                Email: infoUser.Email,\r\n                Address: infoUser.Address,\r\n                City: infoUser.City,\r\n                Avatar: infoUser.Avatar,\r\n                Gender: infoUser.Gender\r\n            })\r\n        }\r\n    }\r\n\r\n    loadDefaultImage = (e) => {\r\n        e.target.src = tempAvatar;\r\n    }\r\n    newAvatar = (data) => {\r\n        this.setState({\r\n            Username: data.Username,\r\n            Firstname: data.Firstname,\r\n            Lastname: data.Lastname,\r\n            DateOfBirth: data.DateOfBirth,\r\n            Phone: data.Phone,\r\n            Email: data.Email,\r\n            Address: data.Address,\r\n            City: data.City,\r\n            Avatar: data.Avatar,\r\n            Gender: data.Gender\r\n        })\r\n    }\r\n    randomID() {\r\n        return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\r\n    }\r\n    generateID() {\r\n        return this.randomID() + this.randomID() + '-' + this.randomID();\r\n    }\r\n    render() {\r\n        var {Firstname} = this.state;\r\n        return (\r\n            <div>\r\n                <div className=\"account\">\r\n                    <a className=\"nav-link dropdown-toggle\" id=\"navbarDropdownMenuLink-55\" data-toggle=\"dropdown\"\r\n                        aria-expanded=\"false\" href=\"/#\">\r\n                        <img\r\n                             src={ this.state.Avatar.data !== undefined ? \"data:image/jpg;base64,\" + (new Buffer(this.state.Avatar.data).toString('base64')) :\r\n                                \"data:image/jpg;base64,\" + this.state.Avatar}\r\n                            className=\"rounded-circle z-depth-0\"\r\n                            alt=\"ava\"\r\n                            id=\"avatar\"\r\n                            onError={this.loadDefaultImage}\r\n                        />\r\n                        {Firstname === '' ? this.props.username : Firstname}\r\n                    </a>\r\n                    <div className=\"dropdown-menu dropdown-menu-lg-right dropdown-secondary \"\r\n                        aria-labelledby=\"navbarDropdownMenuLink-55 \">\r\n                        <a className=\"dropdown-item\" href=\"/#\" data-toggle=\"modal\" data-target=\"#modalUpdateProfile\">Profile</a>\r\n                        <a className=\"dropdown-item\" href=\"/#\" data-toggle=\"modal\" data-target=\"#modalChangePass\">Change password</a>\r\n                        <a className=\"dropdown-item\" href=\"/#\" data-toggle=\"modal\" data-target=\"#modalFeedback\">Help and Feedback</a>\r\n                        <a className=\"dropdown-item\" href=\"/#\" data-toggle=\"modal\" data-target=\"#modalConfirmLogout\">Logout</a>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    {/* modalUpdateProfile */}\r\n                    <UpdateProfile\r\n                        key={this.generateID()}\r\n                        infoUser={this.state}\r\n                        newAvatar={this.newAvatar}\r\n                    />\r\n                    {/* modalChangePassword */}\r\n                    <ChangePassword\r\n                        key={this.generateID()}\r\n                        username={this.props.username}\r\n                    />\r\n                    {/* ModelFeedback */}\r\n                    <Feedback />\r\n                    {/* modalConfirmLogout */}\r\n                    <Logout username={this.props.username}/>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Account\r\n","import React, { Component } from 'react'\r\n\r\nclass Feedback extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"modal fade right\" id=\"modalFeedback\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\"\r\n                    aria-hidden=\"true\" data-backdrop=\"false\">\r\n                    <div className=\"modal-dialog modal-full-height modal-right modal-notify modal-info\" role=\"document\">\r\n\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header blue-gradient\">\r\n                                <p className=\"heading lead\">Feedback request</p>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                    <span aria-hidden=\"true\" className=\"white-text\">×</span>\r\n                                </button>\r\n                            </div>\r\n\r\n                            <div className=\"modal-body\">\r\n                                <div className=\"text-center\">\r\n                                    <i className=\"far fa-file-alt fa-4x mb-3 animated rotateIn\"></i>\r\n                                    <p><strong>Your opinion matters</strong></p>\r\n                                    <p>Have some ideas how to improve our product?\r\n                    <strong>Give us your feedback.</strong>\r\n                                    </p>\r\n                                </div>\r\n\r\n                                <hr></hr>\r\n\r\n                                <p className=\"text-center\">\r\n                                    <strong>Your rating</strong>\r\n                                </p>\r\n                                <div className=\"form-check mb-4\">\r\n                                    <input className=\"form-check-input\" name=\"group1\" type=\"radio\" id=\"radio-179\" value=\"option1\" defaultChecked />\r\n                                    <label className=\"form-check-label\" htmlFor=\"radio-179\">Very good</label>\r\n                                </div>\r\n\r\n                                <div className=\"form-check mb-4\">\r\n                                    <input className=\"form-check-input\" name=\"group1\" type=\"radio\" id=\"radio-279\" value=\"option2\" />\r\n                                    <label className=\"form-check-label\" htmlFor=\"radio-279\">Good</label>\r\n                                </div>\r\n\r\n                                <div className=\"form-check mb-4\">\r\n                                    <input className=\"form-check-input\" name=\"group1\" type=\"radio\" id=\"radio-379\" value=\"option3\" />\r\n                                    <label className=\"form-check-label\" htmlFor=\"radio-379\">Mediocre</label>\r\n                                </div>\r\n                                <div className=\"form-check mb-4\">\r\n                                    <input className=\"form-check-input\" name=\"group1\" type=\"radio\" id=\"radio-479\" value=\"option4\" />\r\n                                    <label className=\"form-check-label\" htmlFor=\"radio-479\">Bad</label>\r\n                                </div>\r\n                                <div className=\"form-check mb-4\">\r\n                                    <input className=\"form-check-input\" name=\"group1\" type=\"radio\" id=\"radio-579\" value=\"option5\" />\r\n                                    <label className=\"form-check-label\" htmlFor=\"radio-579\">Very bad</label>\r\n                                </div>\r\n\r\n                                <p className=\"text-center\">\r\n                                    <strong>What could we improve?</strong>\r\n                                </p>\r\n                                <div className=\"md-form\">\r\n                                    <textarea type=\"text\" id=\"form79textarea\" className=\"md-textarea form-control\" rows=\"3\"></textarea>\r\n                                    <label htmlFor=\"form79textarea\">Your message</label>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"modal-footer justify-content-center\">\r\n                                <a type=\"button\" className=\"btn btn-primary waves-effect waves-light morpheus-den-gradient\" href=\"/#\">Send\r\n                  <i className=\"fa fa-paper-plane ml-1\"></i>\r\n                                </a>\r\n                                <a type=\"button\" className=\"btn btn-outline-primary waves-effect\" data-dismiss=\"modal\" href=\"/#\">Cancel</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Feedback\r\n","import React, { Component, createRef } from 'react'\r\nimport tempAvatar from '../../../../ava.jpg'\r\nimport { updateUserProfile } from '../../../../service/UserService';\r\nimport Resizer from 'react-image-file-resizer'\r\nclass UpdateProfile extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            Firstname: \"\",\r\n            Lastname: \"\",\r\n            DateOfBirth: \"\",\r\n            Phone: \"\",\r\n            Email: \"\",\r\n            Address: \"\",\r\n            City: \"\",\r\n            Avatar: {\r\n                type: \"Buffer\",\r\n                data: Array(0)\r\n            },\r\n            Gender: 0,\r\n            Username: \"\",\r\n            notification: \"\",\r\n            file: \"\",\r\n            user: null\r\n        }\r\n        this.inputFile = createRef()\r\n    }\r\n    componentDidMount() {\r\n        var { infoUser } = this.props;\r\n        if (infoUser !== null) {\r\n            this.setState({\r\n                Username: infoUser.Username,\r\n                Firstname: infoUser.Firstname,\r\n                Lastname: infoUser.Lastname,\r\n                DateOfBirth: infoUser.DateOfBirth,\r\n                Phone: infoUser.Phone,\r\n                Email: infoUser.Email,\r\n                Address: infoUser.Address,\r\n                City: infoUser.City,\r\n                Avatar: infoUser.Avatar,\r\n                Gender: infoUser.Gender\r\n            })\r\n        }\r\n    }\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.infoUser !== state.infoUser && props.infoUser !== null) {\r\n            return {\r\n                infoUser: props.infoUser\r\n            }\r\n        }\r\n        return null;\r\n\r\n    }\r\n    onHandleChange = (event) => {\r\n        var target = event.target;\r\n        var names = target.name;\r\n        var values = target.value;\r\n        if (names === 'Gender') {\r\n            values = target.value === '0' ? 0 : 1;\r\n        }\r\n        this.setState({\r\n            [names]: values\r\n        })\r\n    }\r\n    updateUserProfile = async (e) => {\r\n        e.preventDefault();\r\n        await updateUserProfile(this.state)\r\n            .then(res => {\r\n                this.setState({\r\n                    notification: res.result\r\n                })\r\n            }).catch(err => console.log(err));\r\n    }\r\n    resizeFile = (file) => new Promise(resolve => {\r\n        Resizer.imageFileResizer(file, 150, 150, 'JPEG', 100, 0,\r\n            uri => {\r\n                resolve(uri);\r\n            },\r\n            'base64'\r\n        );\r\n    })\r\n    _onChange = (e) => {\r\n        var target = e.target.files[0];\r\n        const image = this.resizeFile(target);\r\n        image.then(res => {\r\n            var r = res.slice(res.indexOf(',') + 1);\r\n            this.setState({\r\n                Avatar: r,\r\n                file: r\r\n            });\r\n        });\r\n    }\r\n    loadDefaultImage = (e) => {\r\n        e.target.src = tempAvatar;\r\n    }\r\n    close =async () => {\r\n        this.props.newAvatar(this.state);\r\n        await this.setState({\r\n            Firstname: \"\",\r\n            Lastname: \"\",\r\n            DateOfBirth: \"\",\r\n            Phone: \"\",\r\n            Email: \"\",\r\n            Address: \"\",\r\n            City: \"\",\r\n            Avatar: {\r\n                type: \"Buffer\",\r\n                data: Array(0)\r\n            },\r\n            Gender: 0,\r\n            Username: \"\",\r\n            notification: \"\",\r\n            file: \"\"\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"modal fade\"\r\n                    id=\"modalUpdateProfile\" tabIndex=\"-1\" role=\"dialog\" data-backdrop=\"static\" aria-labelledby=\"myModalLabel\">\r\n                    <div className=\"modal-dialog modal-lg\" role=\"document\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <div className=\"file-field text-center\">\r\n                                    <div className=\"mb-1\">\r\n                                        <img\r\n                                            src={ this.state.Avatar.data !== undefined ? \"data:image/jpg;base64,\" + (new Buffer(this.state.Avatar.data).toString('base64')) :\r\n                                            \"data:image/jpg;base64,\" + this.state.Avatar}\r\n                                            alt=\"ava\"\r\n                                            onError={this.loadDefaultImage}\r\n                                            className=\"rounded-circle img-responsive modal-title avatar-pic\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"d-flex justify-content-center\">\r\n                                        <label className=\"btn btn-rounded float-center\">\r\n                                            <input\r\n                                                type=\"file\"\r\n                                                style={{ display: \"none\" }}\r\n                                                onChange={this._onChange}\r\n                                                ref={this.inputFile}\r\n                                            />\r\n                                            Upload Avatar\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                <button type=\"button\" className=\"close\" onClick={this.close} data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n                            <h5 className=\"mt-1 text-center\"><b>\r\n                                {this.state.Username}</b></h5>\r\n                            <div className=\"modal-body mx-3 \">\r\n                                <form onSubmit={this.updateUserProfile}>\r\n                                    <table className=\"tbl-update-profile mb-5\">\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    <div className=\"md-form form-sm mb-1\">\r\n                                                        <i className=\"fas fa-phone-volume prefix grey-text\"></i>\r\n                                                        <input\r\n                                                            type=\"tel\"\r\n                                                            id=\"phone\"\r\n                                                            className=\"form-control\"\r\n                                                            pattern=\"[0]{1}[0-9]{9}\"\r\n                                                            placeholder=\"Phone\"\r\n                                                            name=\"Phone\"\r\n                                                            defaultValue={this.state.Phone}\r\n                                                            onChange={this.onHandleChange}\r\n                                                            required=\"required\"\r\n                                                        />\r\n                                                    </div>\r\n                                                </td>\r\n                                                <td>\r\n                                                    <div className=\"md-form form-sm mb-1\">\r\n                                                        <i className=\"fas fa-envelope prefix grey-text\"></i>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            id=\"email\"\r\n                                                            className=\"form-control\"\r\n                                                            placeholder=\"Email\"\r\n                                                            data-error=\"wrong\"\r\n                                                            data-success=\"right\"\r\n                                                            name=\"Email\"\r\n                                                            defaultValue={this.state.Email}\r\n                                                            onChange={this.onHandleChange}\r\n                                                            required=\"required\"\r\n                                                        />\r\n                                                    </div>\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    <div className=\"md-form form-sm mb-1\">\r\n                                                        <i className=\"fas fa-signature prefix grey-text\"></i>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            id=\"firstname\"\r\n                                                            className=\"form-control\"\r\n                                                            placeholder=\"Firstname\"\r\n                                                            name=\"Firstname\"\r\n                                                            defaultValue={this.state.Firstname}\r\n                                                            onChange={this.onHandleChange}\r\n                                                            required=\"required\"\r\n                                                        />\r\n                                                    </div>\r\n                                                </td>\r\n                                                <td>\r\n                                                    <div className=\"md-form form-sm mb-1\">\r\n                                                        <i className=\"fas fa-signature prefix grey-text\"></i>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            id=\"lastname\"\r\n                                                            className=\"form-control\"\r\n                                                            placeholder=\"Lastname\"\r\n                                                            name=\"Lastname\"\r\n                                                            defaultValue={this.state.Lastname}\r\n                                                            onChange={this.onHandleChange}\r\n                                                            required=\"required\"\r\n                                                        />\r\n                                                    </div>\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    <div className=\"md-form form-sm mb-1\">\r\n                                                        <i className=\"fas fa-birthday-cake prefix grey-text\"></i>\r\n                                                        <input\r\n                                                            type=\"date\"\r\n                                                            id=\"dateofbirth\"\r\n                                                            className=\"form-control grey-text \"\r\n                                                            name=\"DateOfBirth\"\r\n                                                            defaultValue={this.state.DateOfBirth}\r\n                                                            onChange={this.onHandleChange}\r\n                                                            required=\"required\"\r\n                                                        />\r\n                                                    </div>\r\n                                                </td>\r\n                                                <td>\r\n                                                    <div className=\"md-form form-sm mb-1\">\r\n                                                        <i className=\"fas fa-map-marker-alt prefix grey-text\"></i>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            id=\"address\"\r\n                                                            className=\"form-control\"\r\n                                                            placeholder=\"Address\"\r\n                                                            name=\"Address\"\r\n                                                            defaultValue={this.state.Address}\r\n                                                            onChange={this.onHandleChange}\r\n                                                            required=\"required\"\r\n                                                        />\r\n                                                    </div>\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    <div className=\"md-form form-sm mb-1\">\r\n                                                        <i className=\"fas fa-building prefix grey-text\"></i>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            id=\"city\"\r\n                                                            className=\"form-control\"\r\n                                                            placeholder=\"City\"\r\n                                                            name=\"City\"\r\n                                                            defaultValue={this.state.City}\r\n                                                            onChange={this.onHandleChange}\r\n                                                            required=\"required\"\r\n                                                        />\r\n                                                    </div>\r\n                                                </td>\r\n                                                <td>\r\n                                                    <div className=\"md-form form-sm mb-1\">\r\n                                                        <span className=\"radio-gender\">\r\n                                                            <input\r\n                                                                type=\"radio\"\r\n                                                                name=\"Gender\"\r\n                                                                defaultValue={0}\r\n                                                                checked={this.state.Gender === 0}\r\n                                                                onChange={this.onHandleChange}\r\n                                                            />\r\n                                                &nbsp;Male &nbsp;&nbsp;&nbsp;\r\n                                                <input\r\n                                                                type=\"radio\"\r\n                                                                name=\"Gender\"\r\n                                                                defaultValue={1}\r\n                                                                checked={this.state.Gender === 1}\r\n                                                                onChange={this.onHandleChange}\r\n                                                            />\r\n                                                &nbsp;Female\r\n                                                </span>\r\n\r\n                                                    </div>\r\n                                                </td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                    <div className=\"modal-footer d-flex justify-content-center\">\r\n                                        <span className=\"update-profile-notification\" >{this.state.notification}</span>\r\n                                    </div>\r\n                                    <div className=\"modal-footer d-flex justify-content-center\">\r\n                                        <input\r\n                                            type=\"submit\"\r\n                                            value=\"Update\"\r\n                                            id=\"updateProf\"\r\n                                            className=\"btn btn-primary morpheus-den-gradient\"\r\n                                        />\r\n                                        <button className=\"btn\" data-dismiss=\"modal\" onClick={this.close}>Cancel</button>\r\n                                    </div>\r\n                                </form>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UpdateProfile\r\n","import React, { Component, createRef } from 'react'\r\nimport { changePass } from '../../../../service/UserService';\r\n\r\nexport class ChangePassword extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            notification: \"\",\r\n            username: \"\"\r\n        }\r\n        this.oldpass = createRef();\r\n        this.newpass = createRef();\r\n        this.confpass = createRef();\r\n    }\r\n    changePass = async (e) => {\r\n\r\n        e.preventDefault();\r\n        var oldpass = this.oldpass.current.value;\r\n        var newpass = this.newpass.current.value;\r\n        var confpass = this.confpass.current.value;\r\n        console.log('a');\r\n        if (newpass === confpass) {\r\n            if (oldpass === newpass) {\r\n                await this.setState({\r\n                    notification: \"Old password and New password cannot be same\"\r\n                })\r\n            }\r\n            else {\r\n                await changePass(oldpass, newpass, this.props.username)\r\n                    .then(res => {\r\n                        this.setState({\r\n                            notification: res.result\r\n                        })\r\n                    }).catch(err => console.log(err));\r\n                if (this.state.notification === \"Change password successfully!\") {\r\n                    this.oldpass.current.value = null;\r\n                    this.newpass.current.value = null;\r\n                    this.confpass.current.value = null;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            await this.setState({\r\n                notification: \"Confirm password doesn't match\"\r\n            })\r\n        }\r\n\r\n    }\r\n    close = () => {\r\n        this.oldpass.current.value = null;\r\n        this.newpass.current.value = null;\r\n        this.confpass.current.value = null;\r\n        this.setState({\r\n            notification: \"\"\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"modal fade\" id=\"modalChangePass\" tabIndex=\"-1\" role=\"dialog\" data-backdrop=\"static\" aria-labelledby=\"myModalLabel\"\r\n                    aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog\" role=\"document\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header text-center\">\r\n                                <i className=\"fas fa-lock prefix grey-text\"></i>\r\n                                <h4 className=\"modal-title w-100 font-weight-bold\">Change password</h4>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"modal-body mx-3\">\r\n                                <form onSubmit={this.changePass}>\r\n                                    <div className=\"md-form mb-5\">\r\n                                        <input\r\n                                            type=\"password\"\r\n                                            id=\"orangeForm-oldPass\"\r\n                                            name=\"oldPass\"\r\n                                            ref={this.oldpass}\r\n                                            placeholder=\"Old password\"\r\n                                            required=\"required\"\r\n                                            className=\"form-control\" />\r\n                                    </div>\r\n                                    <div className=\"md-form mb-5\">\r\n                                        <input\r\n                                            type=\"password\"\r\n                                            id=\"orangeForm-newPass\"\r\n                                            ref={this.newpass}\r\n                                            name=\"newPass\"\r\n                                            required=\"required\"\r\n                                            placeholder=\"New password\"\r\n                                            className=\"form-control\" />\r\n                                    </div>\r\n                                    <div className=\"md-form mb-4\">\r\n                                        <input\r\n                                            type=\"password\"\r\n                                            id=\"orangeForm-confirmPass\"\r\n                                            ref={this.confpass}\r\n                                            name=\"confirmPass\"\r\n                                            required=\"required\"\r\n                                            placeholder=\"Confirm new password\"\r\n                                            className=\"form-control\" />\r\n                                    </div>\r\n                                    <div className=\"modal-footer d-flex justify-content-center\">\r\n                                        <span className=\"change-pass-notification\" >{this.state.notification}</span>\r\n                                    </div>\r\n                                    <div className=\"modal-footer d-flex justify-content-center\">\r\n                                        <input\r\n                                            className=\"btn btn-unique\"\r\n                                            type=\"submit\"\r\n                                            value=\"Save\"\r\n                                        />\r\n                                        <button className=\"btn\" data-dismiss=\"modal\" onClick={this.close}>Cancel</button>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ChangePassword\r\n","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Login from '../../../../Login/Login';\r\nimport { logout } from '../../../../service/UserService';\r\nimport dateFormat from 'dateformat';\r\n\r\nclass Logout extends Component {\r\n    onLogOut = (e) => {\r\n        logout([this.props.username, dateFormat(new Date(), \"yyyy-mm-dd HH:MM:ss\")]);\r\n        localStorage.removeItem('user');\r\n        this.componentWillUnmount();\r\n        e.preventDefault();\r\n        ReactDOM.render(\r\n            <React.StrictMode>\r\n            <Login/>\r\n            </React.StrictMode>,\r\n            document.getElementById('root')\r\n        );\r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div>\r\n                <div className=\"modal fade\" id=\"modalConfirmLogout\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\"\r\n                    aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog modal-sm modal-notify modal-primary \" role=\"document\">\r\n                        <div className=\"modal-content text-center\">\r\n                            <div className=\"modal-header flex-center justify-content-center blue-gradient\">\r\n                                <h3>Are you sure?</h3>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                <i className=\"fas fa-sign-out-alt fa-4x animated rotateIn logoutIcon\"></i>\r\n                            </div>\r\n                            <div className=\"modal-footer flex-center\">\r\n                                <a href=\"/\" className=\"btn  btn-outline-primary\" onClick = {this.onLogOut}>Yes</a>\r\n                                <a href=\"/#\" type=\"button\" className=\"btn  btn-primary waves-effect morpheus-den-gradient\" data-dismiss=\"modal\">No</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Logout\r\n","export async function getListContact(data) {\r\n    const response = await fetch('http://localhost:3070/api/contact', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ data: data })\r\n    });\r\n    return await response.json();\r\n}\r\n\r\nexport async function getListMessages(data) {\r\n    const response = await fetch('http://localhost:3070/api/listMessages', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ data: data })\r\n    });\r\n    return await response.json();\r\n}\r\nexport async function getListGroup(data) {\r\n\r\n    const response = await fetch('http://localhost:3070/api/listGroup', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ data: data })\r\n    });\r\n    return await response.json();\r\n}\r\nexport async function getInfoMemGroup(ID_Room) {\r\n\r\n    const response = await fetch('http://localhost:3070/api/listGroup/info', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ info: ID_Room })\r\n    });\r\n    return await response.json();\r\n}\r\nexport async function checkRegister(data) {\r\n\r\n    const response = await fetch('http://localhost:3070/api/register', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ user: data })\r\n    });\r\n    return await response.json();\r\n}\r\n//Api login\r\nexport async function login(data) {\r\n    const response = await fetch('http://localhost:3070/api/login', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ username: data[0], password: data[1], timeOnline: data[2], check: data[3] })\r\n    });\r\n    return await response.json();\r\n}\r\n\r\n//Lay tin nhan chat giua 2 user\r\nexport async function getMessages(data) {\r\n    const response = await fetch('http://localhost:3070/api/messages', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ idRoom: data })\r\n    });\r\n    return await response.json();\r\n}\r\n\r\n//Add message\r\nexport async function addMessage(data) {\r\n    // console.log(data);\r\n    const response = await fetch('http://localhost:3070/api/messages/add', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ username: data[0], idRoom: data[1], message: data[2], time: data[3] })\r\n    });\r\n    return await response.json();\r\n}\r\n//update user profile\r\nexport async function updateUserProfile(user) {\r\n\r\n    const response = await fetch('http://localhost:3070/api/user/update', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ user: user })\r\n    });\r\n    return await response.json();\r\n}\r\n//change password\r\nexport async function changePass(oldpass,newpass, username) {\r\n\r\n    const response = await fetch('http://localhost:3070/api/user/updatePass', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ oldpass: oldpass,newpass: newpass, username: username })\r\n    });\r\n    return await response.json();\r\n}\r\n//search user through phone number\r\nexport async function searchUser(phone) {\r\n\r\n    const response = await fetch('http://localhost:3070/api/user/search', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ phone:phone })\r\n    });\r\n    return await response.json();\r\n}\r\n//Check if isFriend\r\nexport async function checkStatusFr(user1,user2) {\r\n\r\n    const response = await fetch('http://localhost:3070/api/friend', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ user1: user1,user2:user2 })\r\n    });\r\n    return await response.json();\r\n}\r\n//Insert friend\r\nexport async function sendRequest(id,sender,receiver,time) {\r\n\r\n    const response = await fetch('http://localhost:3070/api/friend/add', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ id:id,sender:sender,receiver:receiver,time:time })\r\n    });\r\n    return await response.json();\r\n}\r\n\r\n//insert tbl_chatroom\r\nexport async function createChatRoom(id,name,avatar) {\r\n\r\n    const response = await fetch('http://localhost:3070/api/chatroom/add', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ id:id,name:name,avatar:avatar})\r\n    });\r\n    return await response.json();\r\n}\r\n//update tbl_chatroom\r\nexport async function updateRoom(id,avatar) {\r\n\r\n    const response = await fetch('http://localhost:3070/api/chatroom/update', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ id:id,avatar:avatar})\r\n    });\r\n    return await response.json();\r\n}\r\n//get tbl_chatroom\r\nexport async function getInfoRoom(id) {\r\n\r\n    const response = await fetch('http://localhost:3070/api/chatroom', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ id:id})\r\n    });\r\n    return await response.json();\r\n}\r\n//insert tbl_participants\r\nexport async function addParticipants(id,id_room,list) {\r\n\r\n    const response = await fetch('http://localhost:3070/api/participants/add', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ id:id,id_room:id_room,list:list})\r\n    });\r\n    return await response.json();\r\n}\r\n\r\n//get participants\r\nexport async function getListMembers(idRoom) {\r\n\r\n    const response = await fetch('http://localhost:3070/api/participants', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({idRoom:idRoom})\r\n    });\r\n    return await response.json();\r\n}\r\n//Api notifications\r\nexport async function getNotifications(data) {\r\n    const response = await fetch('http://localhost:3070/api/notifications', {\r\n        method: 'POST',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify({username: data})\r\n    });\r\n    return await response.json();\r\n}\r\n\r\n//data = [sender, receiver, isFriend] -> isFriend: accept: 0 || deny: 1\r\n//Accept FR\r\nexport async function acceptFriendRequest(data) {\r\n    const response = await fetch('http://localhost:3070/api/friend/accept', {\r\n        method: 'POST',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify({data: data})\r\n    });\r\n    return await response.json();\r\n}\r\n\r\n//Read notification\r\nexport async function readNotification(data) {\r\n    const response = await fetch('http://localhost:3070/api/notifications/read', {\r\n        method: 'POST',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify({username: data})\r\n    });\r\n    return await response.json();\r\n}\r\n\r\n//Api logout\r\nexport async function logout(data) {\r\n    const response = await fetch('http://localhost:3070/api/login/logout', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ username: data[0], time: data[1]})\r\n    });\r\n    return await response.json();\r\n}"],"sourceRoot":""}